// Generated by jextract

package gov.nasa.gsfc.heasarc.cfitsio;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$25 {

    static final FunctionDescriptor strrev$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle strrev$MH = RuntimeHelper.downcallHandle(
        "strrev",
        constants$25.strrev$FUNC
    );
    static final FunctionDescriptor strset$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle strset$MH = RuntimeHelper.downcallHandle(
        "strset",
        constants$25.strset$FUNC
    );
    static final FunctionDescriptor strupr$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle strupr$MH = RuntimeHelper.downcallHandle(
        "strupr",
        constants$25.strupr$FUNC
    );
    static final FunctionDescriptor __local_stdio_printf_options$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle __local_stdio_printf_options$MH = RuntimeHelper.downcallHandle(
        "__local_stdio_printf_options",
        constants$25.__local_stdio_printf_options$FUNC
    );
    static final FunctionDescriptor __local_stdio_scanf_options$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle __local_stdio_scanf_options$MH = RuntimeHelper.downcallHandle(
        "__local_stdio_scanf_options",
        constants$25.__local_stdio_scanf_options$FUNC
    );
    static final FunctionDescriptor __acrt_iob_func$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle __acrt_iob_func$MH = RuntimeHelper.downcallHandle(
        "__acrt_iob_func",
        constants$25.__acrt_iob_func$FUNC
    );
}


