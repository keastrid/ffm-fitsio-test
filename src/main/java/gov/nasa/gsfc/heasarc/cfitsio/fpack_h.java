// Generated by jextract

package gov.nasa.gsfc.heasarc.cfitsio;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class fpack_h extends fpack_h_1 {

    /* package-private */ fpack_h() {}
    public static OfByte C_CHAR = Constants$root.C_CHAR$LAYOUT;
    public static OfShort C_SHORT = Constants$root.C_SHORT$LAYOUT;
    public static OfInt C_INT = Constants$root.C_LONG$LAYOUT;
    public static OfInt C_LONG = Constants$root.C_LONG$LAYOUT;
    public static OfLong C_LONG_LONG = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfFloat C_FLOAT = Constants$root.C_FLOAT$LAYOUT;
    public static OfDouble C_DOUBLE = Constants$root.C_DOUBLE$LAYOUT;
    public static OfAddress C_POINTER = Constants$root.C_POINTER$LAYOUT;
    public static int _VCRT_COMPILER_PREPROCESSOR() {
        return (int)1L;
    }
    public static int _SAL_VERSION() {
        return (int)20L;
    }
    public static int __SAL_H_VERSION() {
        return (int)180000000L;
    }
    public static int _USE_DECLSPECS_FOR_SAL() {
        return (int)0L;
    }
    public static int _USE_ATTRIBUTES_FOR_SAL() {
        return (int)0L;
    }
    public static int _CRT_PACKING() {
        return (int)8L;
    }
    public static int _HAS_EXCEPTIONS() {
        return (int)1L;
    }
    public static int _HAS_CXX17() {
        return (int)0L;
    }
    public static int _HAS_CXX20() {
        return (int)0L;
    }
    public static int _HAS_NODISCARD() {
        return (int)0L;
    }
    public static int _ARGMAX() {
        return (int)100L;
    }
    public static int _CRT_INT_MAX() {
        return (int)2147483647L;
    }
    public static int _CRT_FUNCTIONS_REQUIRED() {
        return (int)1L;
    }
    public static int _CRT_HAS_CXX17() {
        return (int)0L;
    }
    public static int _ARM_WINAPI_PARTITION_DESKTOP_SDK_AVAILABLE() {
        return (int)1L;
    }
    public static int _CRT_BUILD_DESKTOP_APP() {
        return (int)1L;
    }
    public static int _CRT_INTERNAL_NONSTDC_NAMES() {
        return (int)1L;
    }
    public static int __STDC_WANT_SECURE_LIB__() {
        return (int)1L;
    }
    public static int _SECURECRT_FILL_BUFFER_PATTERN() {
        return (int)254L;
    }
    public static int _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES() {
        return (int)0L;
    }
    public static int _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT() {
        return (int)0L;
    }
    public static int _CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES() {
        return (int)1L;
    }
    public static int _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_MEMORY() {
        return (int)0L;
    }
    public static int _CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES_MEMORY() {
        return (int)0L;
    }
    public static int EPERM() {
        return (int)1L;
    }
    public static int ENOENT() {
        return (int)2L;
    }
    public static int ESRCH() {
        return (int)3L;
    }
    public static int EINTR() {
        return (int)4L;
    }
    public static int EIO() {
        return (int)5L;
    }
    public static int ENXIO() {
        return (int)6L;
    }
    public static int E2BIG() {
        return (int)7L;
    }
    public static int ENOEXEC() {
        return (int)8L;
    }
    public static int EBADF() {
        return (int)9L;
    }
    public static int ECHILD() {
        return (int)10L;
    }
    public static int EAGAIN() {
        return (int)11L;
    }
    public static int ENOMEM() {
        return (int)12L;
    }
    public static int EACCES() {
        return (int)13L;
    }
    public static int EFAULT() {
        return (int)14L;
    }
    public static int EBUSY() {
        return (int)16L;
    }
    public static int EEXIST() {
        return (int)17L;
    }
    public static int EXDEV() {
        return (int)18L;
    }
    public static int ENODEV() {
        return (int)19L;
    }
    public static int ENOTDIR() {
        return (int)20L;
    }
    public static int EISDIR() {
        return (int)21L;
    }
    public static int ENFILE() {
        return (int)23L;
    }
    public static int EMFILE() {
        return (int)24L;
    }
    public static int ENOTTY() {
        return (int)25L;
    }
    public static int EFBIG() {
        return (int)27L;
    }
    public static int ENOSPC() {
        return (int)28L;
    }
    public static int ESPIPE() {
        return (int)29L;
    }
    public static int EROFS() {
        return (int)30L;
    }
    public static int EMLINK() {
        return (int)31L;
    }
    public static int EPIPE() {
        return (int)32L;
    }
    public static int EDOM() {
        return (int)33L;
    }
    public static int EDEADLK() {
        return (int)36L;
    }
    public static int ENAMETOOLONG() {
        return (int)38L;
    }
    public static int ENOLCK() {
        return (int)39L;
    }
    public static int ENOSYS() {
        return (int)40L;
    }
    public static int ENOTEMPTY() {
        return (int)41L;
    }
    public static int EINVAL() {
        return (int)22L;
    }
    public static int ERANGE() {
        return (int)34L;
    }
    public static int EILSEQ() {
        return (int)42L;
    }
    public static int STRUNCATE() {
        return (int)80L;
    }
    public static int EADDRINUSE() {
        return (int)100L;
    }
    public static int EADDRNOTAVAIL() {
        return (int)101L;
    }
    public static int EAFNOSUPPORT() {
        return (int)102L;
    }
    public static int EALREADY() {
        return (int)103L;
    }
    public static int EBADMSG() {
        return (int)104L;
    }
    public static int ECANCELED() {
        return (int)105L;
    }
    public static int ECONNABORTED() {
        return (int)106L;
    }
    public static int ECONNREFUSED() {
        return (int)107L;
    }
    public static int ECONNRESET() {
        return (int)108L;
    }
    public static int EDESTADDRREQ() {
        return (int)109L;
    }
    public static int EHOSTUNREACH() {
        return (int)110L;
    }
    public static int EIDRM() {
        return (int)111L;
    }
    public static int EINPROGRESS() {
        return (int)112L;
    }
    public static int EISCONN() {
        return (int)113L;
    }
    public static int ELOOP() {
        return (int)114L;
    }
    public static int EMSGSIZE() {
        return (int)115L;
    }
    public static int ENETDOWN() {
        return (int)116L;
    }
    public static int ENETRESET() {
        return (int)117L;
    }
    public static int ENETUNREACH() {
        return (int)118L;
    }
    public static int ENOBUFS() {
        return (int)119L;
    }
    public static int ENODATA() {
        return (int)120L;
    }
    public static int ENOLINK() {
        return (int)121L;
    }
    public static int ENOMSG() {
        return (int)122L;
    }
    public static int ENOPROTOOPT() {
        return (int)123L;
    }
    public static int ENOSR() {
        return (int)124L;
    }
    public static int ENOSTR() {
        return (int)125L;
    }
    public static int ENOTCONN() {
        return (int)126L;
    }
    public static int ENOTRECOVERABLE() {
        return (int)127L;
    }
    public static int ENOTSOCK() {
        return (int)128L;
    }
    public static int ENOTSUP() {
        return (int)129L;
    }
    public static int EOPNOTSUPP() {
        return (int)130L;
    }
    public static int EOTHER() {
        return (int)131L;
    }
    public static int EOVERFLOW() {
        return (int)132L;
    }
    public static int EOWNERDEAD() {
        return (int)133L;
    }
    public static int EPROTO() {
        return (int)134L;
    }
    public static int EPROTONOSUPPORT() {
        return (int)135L;
    }
    public static int EPROTOTYPE() {
        return (int)136L;
    }
    public static int ETIME() {
        return (int)137L;
    }
    public static int ETIMEDOUT() {
        return (int)138L;
    }
    public static int ETXTBSY() {
        return (int)139L;
    }
    public static int EWOULDBLOCK() {
        return (int)140L;
    }
    public static int BUFSIZ() {
        return (int)512L;
    }
    public static int _NSTREAM_() {
        return (int)512L;
    }
    public static int _IOB_ENTRIES() {
        return (int)3L;
    }
    public static int _IOFBF() {
        return (int)0L;
    }
    public static int _IOLBF() {
        return (int)64L;
    }
    public static int _IONBF() {
        return (int)4L;
    }
    public static int L_tmpnam() {
        return (int)260L;
    }
    public static int SEEK_CUR() {
        return (int)1L;
    }
    public static int SEEK_END() {
        return (int)2L;
    }
    public static int SEEK_SET() {
        return (int)0L;
    }
    public static int FILENAME_MAX() {
        return (int)260L;
    }
    public static int FOPEN_MAX() {
        return (int)20L;
    }
    public static int _SYS_OPEN() {
        return (int)20L;
    }
    public static int CHAR_BIT() {
        return (int)8L;
    }
    public static int SCHAR_MAX() {
        return (int)127L;
    }
    public static int UCHAR_MAX() {
        return (int)255L;
    }
    public static int MB_LEN_MAX() {
        return (int)5L;
    }
    public static int SHRT_MAX() {
        return (int)32767L;
    }
    public static int USHRT_MAX() {
        return (int)65535L;
    }
    public static int INT_MAX() {
        return (int)2147483647L;
    }
    public static int EXIT_SUCCESS() {
        return (int)0L;
    }
    public static int EXIT_FAILURE() {
        return (int)1L;
    }
    public static int _WRITE_ABORT_MSG() {
        return (int)1L;
    }
    public static int _CALL_REPORTFAULT() {
        return (int)2L;
    }
    public static int _OUT_TO_DEFAULT() {
        return (int)0L;
    }
    public static int _OUT_TO_STDERR() {
        return (int)1L;
    }
    public static int _OUT_TO_MSGBOX() {
        return (int)2L;
    }
    public static int _REPORT_ERRMODE() {
        return (int)3L;
    }
    public static int RAND_MAX() {
        return (int)32767L;
    }
    public static int _MAX_PATH() {
        return (int)260L;
    }
    public static int _MAX_DRIVE() {
        return (int)3L;
    }
    public static int _MAX_DIR() {
        return (int)256L;
    }
    public static int _MAX_FNAME() {
        return (int)256L;
    }
    public static int _MAX_EXT() {
        return (int)256L;
    }
    public static int _MAX_ENV() {
        return (int)32767L;
    }
    public static int CFITSIO_MICRO() {
        return (int)0L;
    }
    public static int CFITSIO_MINOR() {
        return (int)2L;
    }
    public static int CFITSIO_MAJOR() {
        return (int)4L;
    }
    public static int CFITSIO_SONAME() {
        return (int)10L;
    }
    public static int USE_LL_SUFFIX() {
        return (int)0L;
    }
    public static int NIOBUF() {
        return (int)40L;
    }
    public static int IOBUFLEN() {
        return (int)2880L;
    }
    public static int FLEN_FILENAME() {
        return (int)1025L;
    }
    public static int FLEN_KEYWORD() {
        return (int)75L;
    }
    public static int FLEN_CARD() {
        return (int)81L;
    }
    public static int FLEN_VALUE() {
        return (int)71L;
    }
    public static int FLEN_COMMENT() {
        return (int)73L;
    }
    public static int FLEN_ERRMSG() {
        return (int)81L;
    }
    public static int FLEN_STATUS() {
        return (int)31L;
    }
    public static int TBIT() {
        return (int)1L;
    }
    public static int TBYTE() {
        return (int)11L;
    }
    public static int TSBYTE() {
        return (int)12L;
    }
    public static int TLOGICAL() {
        return (int)14L;
    }
    public static int TSTRING() {
        return (int)16L;
    }
    public static int TUSHORT() {
        return (int)20L;
    }
    public static int TSHORT() {
        return (int)21L;
    }
    public static int TUINT() {
        return (int)30L;
    }
    public static int TINT() {
        return (int)31L;
    }
    public static int TULONG() {
        return (int)40L;
    }
    public static int TLONG() {
        return (int)41L;
    }
    public static int TINT32BIT() {
        return (int)41L;
    }
    public static int TFLOAT() {
        return (int)42L;
    }
    public static int TULONGLONG() {
        return (int)80L;
    }
    public static int TLONGLONG() {
        return (int)81L;
    }
    public static int TDOUBLE() {
        return (int)82L;
    }
    public static int TCOMPLEX() {
        return (int)83L;
    }
    public static int TDBLCOMPLEX() {
        return (int)163L;
    }
    public static int TYP_STRUC_KEY() {
        return (int)10L;
    }
    public static int TYP_CMPRS_KEY() {
        return (int)20L;
    }
    public static int TYP_SCAL_KEY() {
        return (int)30L;
    }
    public static int TYP_NULL_KEY() {
        return (int)40L;
    }
    public static int TYP_DIM_KEY() {
        return (int)50L;
    }
    public static int TYP_RANG_KEY() {
        return (int)60L;
    }
    public static int TYP_UNIT_KEY() {
        return (int)70L;
    }
    public static int TYP_DISP_KEY() {
        return (int)80L;
    }
    public static int TYP_HDUID_KEY() {
        return (int)90L;
    }
    public static int TYP_CKSUM_KEY() {
        return (int)100L;
    }
    public static int TYP_WCS_KEY() {
        return (int)110L;
    }
    public static int TYP_REFSYS_KEY() {
        return (int)120L;
    }
    public static int TYP_COMM_KEY() {
        return (int)130L;
    }
    public static int TYP_CONT_KEY() {
        return (int)140L;
    }
    public static int TYP_USER_KEY() {
        return (int)150L;
    }
    public static int BYTE_IMG() {
        return (int)8L;
    }
    public static int SHORT_IMG() {
        return (int)16L;
    }
    public static int LONG_IMG() {
        return (int)32L;
    }
    public static int LONGLONG_IMG() {
        return (int)64L;
    }
    public static int SBYTE_IMG() {
        return (int)10L;
    }
    public static int USHORT_IMG() {
        return (int)20L;
    }
    public static int ULONG_IMG() {
        return (int)40L;
    }
    public static int ULONGLONG_IMG() {
        return (int)80L;
    }
    public static int IMAGE_HDU() {
        return (int)0L;
    }
    public static int ASCII_TBL() {
        return (int)1L;
    }
    public static int BINARY_TBL() {
        return (int)2L;
    }
    public static int READONLY() {
        return (int)0L;
    }
    public static int READWRITE() {
        return (int)1L;
    }
    public static int SUBTRACTIVE_DITHER_1() {
        return (int)1L;
    }
    public static int SUBTRACTIVE_DITHER_2() {
        return (int)2L;
    }
    public static int MAX_COMPRESS_DIM() {
        return (int)6L;
    }
    public static int RICE_1() {
        return (int)11L;
    }
    public static int GZIP_1() {
        return (int)21L;
    }
    public static int GZIP_2() {
        return (int)22L;
    }
    public static int PLIO_1() {
        return (int)31L;
    }
    public static int HCOMPRESS_1() {
        return (int)41L;
    }
    public static int BZIP2_1() {
        return (int)51L;
    }
    public static int TRUE() {
        return (int)1L;
    }
    public static int FALSE() {
        return (int)0L;
    }
    public static int CASESEN() {
        return (int)1L;
    }
    public static int CASEINSEN() {
        return (int)0L;
    }
    public static int GT_ID_ALL_URI() {
        return (int)0L;
    }
    public static int GT_ID_REF() {
        return (int)1L;
    }
    public static int GT_ID_POS() {
        return (int)2L;
    }
    public static int GT_ID_ALL() {
        return (int)3L;
    }
    public static int GT_ID_REF_URI() {
        return (int)11L;
    }
    public static int GT_ID_POS_URI() {
        return (int)12L;
    }
    public static int OPT_RM_GPT() {
        return (int)0L;
    }
    public static int OPT_RM_ENTRY() {
        return (int)1L;
    }
    public static int OPT_RM_MBR() {
        return (int)2L;
    }
    public static int OPT_RM_ALL() {
        return (int)3L;
    }
    public static int OPT_GCP_GPT() {
        return (int)0L;
    }
    public static int OPT_GCP_MBR() {
        return (int)1L;
    }
    public static int OPT_GCP_ALL() {
        return (int)2L;
    }
    public static int OPT_MCP_ADD() {
        return (int)0L;
    }
    public static int OPT_MCP_NADD() {
        return (int)1L;
    }
    public static int OPT_MCP_REPL() {
        return (int)2L;
    }
    public static int OPT_MCP_MOV() {
        return (int)3L;
    }
    public static int OPT_MRG_COPY() {
        return (int)0L;
    }
    public static int OPT_MRG_MOV() {
        return (int)1L;
    }
    public static int OPT_CMT_MBR() {
        return (int)1L;
    }
    public static int OPT_CMT_MBR_DEL() {
        return (int)11L;
    }
    public static int VALIDSTRUC() {
        return (int)555L;
    }
    public static int InputCol() {
        return (int)0L;
    }
    public static int InputOutputCol() {
        return (int)1L;
    }
    public static int OutputCol() {
        return (int)2L;
    }
    public static int TemporaryCol() {
        return (int)3L;
    }
    public static int SAME_FILE() {
        return (int)101L;
    }
    public static int TOO_MANY_FILES() {
        return (int)103L;
    }
    public static int FILE_NOT_OPENED() {
        return (int)104L;
    }
    public static int FILE_NOT_CREATED() {
        return (int)105L;
    }
    public static int WRITE_ERROR() {
        return (int)106L;
    }
    public static int END_OF_FILE() {
        return (int)107L;
    }
    public static int READ_ERROR() {
        return (int)108L;
    }
    public static int FILE_NOT_CLOSED() {
        return (int)110L;
    }
    public static int ARRAY_TOO_BIG() {
        return (int)111L;
    }
    public static int READONLY_FILE() {
        return (int)112L;
    }
    public static int MEMORY_ALLOCATION() {
        return (int)113L;
    }
    public static int BAD_FILEPTR() {
        return (int)114L;
    }
    public static int NULL_INPUT_PTR() {
        return (int)115L;
    }
    public static int SEEK_ERROR() {
        return (int)116L;
    }
    public static int BAD_NETTIMEOUT() {
        return (int)117L;
    }
    public static int BAD_URL_PREFIX() {
        return (int)121L;
    }
    public static int TOO_MANY_DRIVERS() {
        return (int)122L;
    }
    public static int DRIVER_INIT_FAILED() {
        return (int)123L;
    }
    public static int NO_MATCHING_DRIVER() {
        return (int)124L;
    }
    public static int URL_PARSE_ERROR() {
        return (int)125L;
    }
    public static int RANGE_PARSE_ERROR() {
        return (int)126L;
    }
    public static int HEADER_NOT_EMPTY() {
        return (int)201L;
    }
    public static int KEY_NO_EXIST() {
        return (int)202L;
    }
    public static int KEY_OUT_BOUNDS() {
        return (int)203L;
    }
    public static int VALUE_UNDEFINED() {
        return (int)204L;
    }
    public static int NO_QUOTE() {
        return (int)205L;
    }
    public static int BAD_INDEX_KEY() {
        return (int)206L;
    }
    public static int BAD_KEYCHAR() {
        return (int)207L;
    }
    public static int BAD_ORDER() {
        return (int)208L;
    }
    public static int NOT_POS_INT() {
        return (int)209L;
    }
    public static int NO_END() {
        return (int)210L;
    }
    public static int BAD_BITPIX() {
        return (int)211L;
    }
    public static int BAD_NAXIS() {
        return (int)212L;
    }
    public static int BAD_NAXES() {
        return (int)213L;
    }
    public static int BAD_PCOUNT() {
        return (int)214L;
    }
    public static int BAD_GCOUNT() {
        return (int)215L;
    }
    public static int BAD_TFIELDS() {
        return (int)216L;
    }
    public static int NEG_WIDTH() {
        return (int)217L;
    }
    public static int NEG_ROWS() {
        return (int)218L;
    }
    public static int COL_NOT_FOUND() {
        return (int)219L;
    }
    public static int BAD_SIMPLE() {
        return (int)220L;
    }
    public static int NO_SIMPLE() {
        return (int)221L;
    }
    public static int NO_BITPIX() {
        return (int)222L;
    }
    public static int NO_NAXIS() {
        return (int)223L;
    }
    public static int NO_NAXES() {
        return (int)224L;
    }
    public static int NO_XTENSION() {
        return (int)225L;
    }
    public static int NOT_ATABLE() {
        return (int)226L;
    }
    public static int NOT_BTABLE() {
        return (int)227L;
    }
    public static int NO_PCOUNT() {
        return (int)228L;
    }
    public static int NO_GCOUNT() {
        return (int)229L;
    }
    public static int NO_TFIELDS() {
        return (int)230L;
    }
    public static int NO_TBCOL() {
        return (int)231L;
    }
    public static int NO_TFORM() {
        return (int)232L;
    }
    public static int NOT_IMAGE() {
        return (int)233L;
    }
    public static int BAD_TBCOL() {
        return (int)234L;
    }
    public static int NOT_TABLE() {
        return (int)235L;
    }
    public static int COL_TOO_WIDE() {
        return (int)236L;
    }
    public static int COL_NOT_UNIQUE() {
        return (int)237L;
    }
    public static int BAD_ROW_WIDTH() {
        return (int)241L;
    }
    public static int UNKNOWN_EXT() {
        return (int)251L;
    }
    public static int UNKNOWN_REC() {
        return (int)252L;
    }
    public static int END_JUNK() {
        return (int)253L;
    }
    public static int BAD_HEADER_FILL() {
        return (int)254L;
    }
    public static int BAD_DATA_FILL() {
        return (int)255L;
    }
    public static int BAD_TFORM() {
        return (int)261L;
    }
    public static int BAD_TFORM_DTYPE() {
        return (int)262L;
    }
    public static int BAD_TDIM() {
        return (int)263L;
    }
    public static int BAD_HEAP_PTR() {
        return (int)264L;
    }
    public static int BAD_HDU_NUM() {
        return (int)301L;
    }
    public static int BAD_COL_NUM() {
        return (int)302L;
    }
    public static int NEG_FILE_POS() {
        return (int)304L;
    }
    public static int NEG_BYTES() {
        return (int)306L;
    }
    public static int BAD_ROW_NUM() {
        return (int)307L;
    }
    public static int BAD_ELEM_NUM() {
        return (int)308L;
    }
    public static int NOT_ASCII_COL() {
        return (int)309L;
    }
    public static int NOT_LOGICAL_COL() {
        return (int)310L;
    }
    public static int BAD_ATABLE_FORMAT() {
        return (int)311L;
    }
    public static int BAD_BTABLE_FORMAT() {
        return (int)312L;
    }
    public static int NO_NULL() {
        return (int)314L;
    }
    public static int NOT_VARI_LEN() {
        return (int)317L;
    }
    public static int BAD_DIMEN() {
        return (int)320L;
    }
    public static int BAD_PIX_NUM() {
        return (int)321L;
    }
    public static int ZERO_SCALE() {
        return (int)322L;
    }
    public static int NEG_AXIS() {
        return (int)323L;
    }
    public static int NOT_GROUP_TABLE() {
        return (int)340L;
    }
    public static int HDU_ALREADY_MEMBER() {
        return (int)341L;
    }
    public static int MEMBER_NOT_FOUND() {
        return (int)342L;
    }
    public static int GROUP_NOT_FOUND() {
        return (int)343L;
    }
    public static int BAD_GROUP_ID() {
        return (int)344L;
    }
    public static int TOO_MANY_HDUS_TRACKED() {
        return (int)345L;
    }
    public static int HDU_ALREADY_TRACKED() {
        return (int)346L;
    }
    public static int BAD_OPTION() {
        return (int)347L;
    }
    public static int IDENTICAL_POINTERS() {
        return (int)348L;
    }
    public static int BAD_GROUP_ATTACH() {
        return (int)349L;
    }
    public static int BAD_GROUP_DETACH() {
        return (int)350L;
    }
    public static int BAD_I2C() {
        return (int)401L;
    }
    public static int BAD_F2C() {
        return (int)402L;
    }
    public static int BAD_INTKEY() {
        return (int)403L;
    }
    public static int BAD_LOGICALKEY() {
        return (int)404L;
    }
    public static int BAD_FLOATKEY() {
        return (int)405L;
    }
    public static int BAD_DOUBLEKEY() {
        return (int)406L;
    }
    public static int BAD_C2I() {
        return (int)407L;
    }
    public static int BAD_C2F() {
        return (int)408L;
    }
    public static int BAD_C2D() {
        return (int)409L;
    }
    public static int BAD_DATATYPE() {
        return (int)410L;
    }
    public static int BAD_DECIM() {
        return (int)411L;
    }
    public static int NUM_OVERFLOW() {
        return (int)412L;
    }
    public static int DATA_COMPRESSION_ERR() {
        return (int)413L;
    }
    public static int DATA_DECOMPRESSION_ERR() {
        return (int)414L;
    }
    public static int NO_COMPRESSED_TILE() {
        return (int)415L;
    }
    public static int BAD_DATE() {
        return (int)420L;
    }
    public static int PARSE_SYNTAX_ERR() {
        return (int)431L;
    }
    public static int PARSE_BAD_TYPE() {
        return (int)432L;
    }
    public static int PARSE_LRG_VECTOR() {
        return (int)433L;
    }
    public static int PARSE_NO_OUTPUT() {
        return (int)434L;
    }
    public static int PARSE_BAD_COL() {
        return (int)435L;
    }
    public static int PARSE_BAD_OUTPUT() {
        return (int)436L;
    }
    public static int ANGLE_TOO_BIG() {
        return (int)501L;
    }
    public static int BAD_WCS_VAL() {
        return (int)502L;
    }
    public static int WCS_ERROR() {
        return (int)503L;
    }
    public static int BAD_WCS_PROJ() {
        return (int)504L;
    }
    public static int NO_WCS_KEY() {
        return (int)505L;
    }
    public static int APPROX_WCS_KEY() {
        return (int)506L;
    }
    public static int NO_CLOSE_ERROR() {
        return (int)999L;
    }
    public static int FP_INIT_MAGIC() {
        return (int)42L;
    }
    public static int FPACK() {
        return (int)0L;
    }
    public static int FUNPACK() {
        return (int)1L;
    }
    public static int DEF_HCOMP_SMOOTH() {
        return (int)0L;
    }
    public static int DEF_RESCALE_NOISE() {
        return (int)0L;
    }
    public static int SZ_STR() {
        return (int)513L;
    }
    public static int SZ_CARD() {
        return (int)81L;
    }
    public static OfAddress va_list = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle __va_start$MH() {
        return RuntimeHelper.requireNonNull(constants$0.__va_start$MH,"__va_start");
    }
    public static void __va_start ( Addressable x0, Object... x1) {
        var mh$ = __va_start$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfLong ptrdiff_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong intptr_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static MethodHandle __security_init_cookie$MH() {
        return RuntimeHelper.requireNonNull(constants$0.__security_init_cookie$MH,"__security_init_cookie");
    }
    public static void __security_init_cookie () {
        var mh$ = __security_init_cookie$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __security_check_cookie$MH() {
        return RuntimeHelper.requireNonNull(constants$0.__security_check_cookie$MH,"__security_check_cookie");
    }
    public static void __security_check_cookie ( long _StackCookie) {
        var mh$ = __security_check_cookie$MH();
        try {
            mh$.invokeExact(_StackCookie);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __report_gsfailure$MH() {
        return RuntimeHelper.requireNonNull(constants$0.__report_gsfailure$MH,"__report_gsfailure");
    }
    public static void __report_gsfailure ( long _StackCookie) {
        var mh$ = __report_gsfailure$MH();
        try {
            mh$.invokeExact(_StackCookie);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout __security_cookie$LAYOUT() {
        return constants$0.__security_cookie$LAYOUT;
    }
    public static VarHandle __security_cookie$VH() {
        return constants$0.__security_cookie$VH;
    }
    public static MemorySegment __security_cookie$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$0.__security_cookie$SEGMENT,"__security_cookie");
    }
    public static long __security_cookie$get() {
        return (long) constants$0.__security_cookie$VH.get(RuntimeHelper.requireNonNull(constants$0.__security_cookie$SEGMENT, "__security_cookie"));
    }
    public static void __security_cookie$set( long x) {
        constants$0.__security_cookie$VH.set(RuntimeHelper.requireNonNull(constants$0.__security_cookie$SEGMENT, "__security_cookie"), x);
    }
    public static MethodHandle _invalid_parameter_noinfo$MH() {
        return RuntimeHelper.requireNonNull(constants$0._invalid_parameter_noinfo$MH,"_invalid_parameter_noinfo");
    }
    public static void _invalid_parameter_noinfo () {
        var mh$ = _invalid_parameter_noinfo$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _invalid_parameter_noinfo_noreturn$MH() {
        return RuntimeHelper.requireNonNull(constants$1._invalid_parameter_noinfo_noreturn$MH,"_invalid_parameter_noinfo_noreturn");
    }
    public static void _invalid_parameter_noinfo_noreturn () {
        var mh$ = _invalid_parameter_noinfo_noreturn$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _invoke_watson$MH() {
        return RuntimeHelper.requireNonNull(constants$1._invoke_watson$MH,"_invoke_watson");
    }
    public static void _invoke_watson ( Addressable _Expression,  Addressable _FunctionName,  Addressable _FileName,  int _LineNo,  long _Reserved) {
        var mh$ = _invoke_watson$MH();
        try {
            mh$.invokeExact(_Expression, _FunctionName, _FileName, _LineNo, _Reserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfInt errno_t = Constants$root.C_LONG$LAYOUT;
    public static OfInt __time32_t = Constants$root.C_LONG$LAYOUT;
    public static OfLong __time64_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfAddress _locale_t = Constants$root.C_POINTER$LAYOUT;
    public static OfLong time_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static MethodHandle _errno$MH() {
        return RuntimeHelper.requireNonNull(constants$1._errno$MH,"_errno");
    }
    public static MemoryAddress _errno () {
        var mh$ = _errno$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_errno$MH() {
        return RuntimeHelper.requireNonNull(constants$1._set_errno$MH,"_set_errno");
    }
    public static int _set_errno ( int _Value) {
        var mh$ = _set_errno$MH();
        try {
            return (int)mh$.invokeExact(_Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_errno$MH() {
        return RuntimeHelper.requireNonNull(constants$1._get_errno$MH,"_get_errno");
    }
    public static int _get_errno ( Addressable _Value) {
        var mh$ = _get_errno$MH();
        try {
            return (int)mh$.invokeExact(_Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __doserrno$MH() {
        return RuntimeHelper.requireNonNull(constants$1.__doserrno$MH,"__doserrno");
    }
    public static MemoryAddress __doserrno () {
        var mh$ = __doserrno$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_doserrno$MH() {
        return RuntimeHelper.requireNonNull(constants$2._set_doserrno$MH,"_set_doserrno");
    }
    public static int _set_doserrno ( int _Value) {
        var mh$ = _set_doserrno$MH();
        try {
            return (int)mh$.invokeExact(_Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_doserrno$MH() {
        return RuntimeHelper.requireNonNull(constants$2._get_doserrno$MH,"_get_doserrno");
    }
    public static int _get_doserrno ( Addressable _Value) {
        var mh$ = _get_doserrno$MH();
        try {
            return (int)mh$.invokeExact(_Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle memchr$MH() {
        return RuntimeHelper.requireNonNull(constants$2.memchr$MH,"memchr");
    }
    public static MemoryAddress memchr ( Addressable _Buf,  int _Val,  long _MaxCount) {
        var mh$ = memchr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Buf, _Val, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle memcmp$MH() {
        return RuntimeHelper.requireNonNull(constants$2.memcmp$MH,"memcmp");
    }
    public static int memcmp ( Addressable _Buf1,  Addressable _Buf2,  long _Size) {
        var mh$ = memcmp$MH();
        try {
            return (int)mh$.invokeExact(_Buf1, _Buf2, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle memcpy$MH() {
        return RuntimeHelper.requireNonNull(constants$2.memcpy$MH,"memcpy");
    }
    public static MemoryAddress memcpy ( Addressable _Dst,  Addressable _Src,  long _Size) {
        var mh$ = memcpy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Dst, _Src, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle memmove$MH() {
        return RuntimeHelper.requireNonNull(constants$2.memmove$MH,"memmove");
    }
    public static MemoryAddress memmove ( Addressable _Dst,  Addressable _Src,  long _Size) {
        var mh$ = memmove$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Dst, _Src, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle memset$MH() {
        return RuntimeHelper.requireNonNull(constants$3.memset$MH,"memset");
    }
    public static MemoryAddress memset ( Addressable _Dst,  int _Val,  long _Size) {
        var mh$ = memset$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Dst, _Val, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strchr$MH() {
        return RuntimeHelper.requireNonNull(constants$3.strchr$MH,"strchr");
    }
    public static MemoryAddress strchr ( Addressable _Str,  int _Val) {
        var mh$ = strchr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Str, _Val);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strrchr$MH() {
        return RuntimeHelper.requireNonNull(constants$3.strrchr$MH,"strrchr");
    }
    public static MemoryAddress strrchr ( Addressable _Str,  int _Ch) {
        var mh$ = strrchr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Str, _Ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strstr$MH() {
        return RuntimeHelper.requireNonNull(constants$3.strstr$MH,"strstr");
    }
    public static MemoryAddress strstr ( Addressable _Str,  Addressable _SubStr) {
        var mh$ = strstr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Str, _SubStr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcschr$MH() {
        return RuntimeHelper.requireNonNull(constants$3.wcschr$MH,"wcschr");
    }
    public static MemoryAddress wcschr ( Addressable _Str,  short _Ch) {
        var mh$ = wcschr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Str, _Ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsrchr$MH() {
        return RuntimeHelper.requireNonNull(constants$3.wcsrchr$MH,"wcsrchr");
    }
    public static MemoryAddress wcsrchr ( Addressable _Str,  short _Ch) {
        var mh$ = wcsrchr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Str, _Ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsstr$MH() {
        return RuntimeHelper.requireNonNull(constants$4.wcsstr$MH,"wcsstr");
    }
    public static MemoryAddress wcsstr ( Addressable _Str,  Addressable _SubStr) {
        var mh$ = wcsstr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Str, _SubStr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle memcpy_s$MH() {
        return RuntimeHelper.requireNonNull(constants$4.memcpy_s$MH,"memcpy_s");
    }
    public static int memcpy_s ( Addressable _Destination,  long _DestinationSize,  Addressable _Source,  long _SourceSize) {
        var mh$ = memcpy_s$MH();
        try {
            return (int)mh$.invokeExact(_Destination, _DestinationSize, _Source, _SourceSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle memmove_s$MH() {
        return RuntimeHelper.requireNonNull(constants$4.memmove_s$MH,"memmove_s");
    }
    public static int memmove_s ( Addressable _Destination,  long _DestinationSize,  Addressable _Source,  long _SourceSize) {
        var mh$ = memmove_s$MH();
        try {
            return (int)mh$.invokeExact(_Destination, _DestinationSize, _Source, _SourceSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _memicmp$MH() {
        return RuntimeHelper.requireNonNull(constants$4._memicmp$MH,"_memicmp");
    }
    public static int _memicmp ( Addressable _Buf1,  Addressable _Buf2,  long _Size) {
        var mh$ = _memicmp$MH();
        try {
            return (int)mh$.invokeExact(_Buf1, _Buf2, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _memicmp_l$MH() {
        return RuntimeHelper.requireNonNull(constants$4._memicmp_l$MH,"_memicmp_l");
    }
    public static int _memicmp_l ( Addressable _Buf1,  Addressable _Buf2,  long _Size,  Addressable _Locale) {
        var mh$ = _memicmp_l$MH();
        try {
            return (int)mh$.invokeExact(_Buf1, _Buf2, _Size, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle memccpy$MH() {
        return RuntimeHelper.requireNonNull(constants$4.memccpy$MH,"memccpy");
    }
    public static MemoryAddress memccpy ( Addressable _Dst,  Addressable _Src,  int _Val,  long _Size) {
        var mh$ = memccpy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Dst, _Src, _Val, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle memicmp$MH() {
        return RuntimeHelper.requireNonNull(constants$5.memicmp$MH,"memicmp");
    }
    public static int memicmp ( Addressable _Buf1,  Addressable _Buf2,  long _Size) {
        var mh$ = memicmp$MH();
        try {
            return (int)mh$.invokeExact(_Buf1, _Buf2, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcscat_s$MH() {
        return RuntimeHelper.requireNonNull(constants$5.wcscat_s$MH,"wcscat_s");
    }
    public static int wcscat_s ( Addressable _Destination,  long _SizeInWords,  Addressable _Source) {
        var mh$ = wcscat_s$MH();
        try {
            return (int)mh$.invokeExact(_Destination, _SizeInWords, _Source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcscpy_s$MH() {
        return RuntimeHelper.requireNonNull(constants$5.wcscpy_s$MH,"wcscpy_s");
    }
    public static int wcscpy_s ( Addressable _Destination,  long _SizeInWords,  Addressable _Source) {
        var mh$ = wcscpy_s$MH();
        try {
            return (int)mh$.invokeExact(_Destination, _SizeInWords, _Source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsncat_s$MH() {
        return RuntimeHelper.requireNonNull(constants$5.wcsncat_s$MH,"wcsncat_s");
    }
    public static int wcsncat_s ( Addressable _Destination,  long _SizeInWords,  Addressable _Source,  long _MaxCount) {
        var mh$ = wcsncat_s$MH();
        try {
            return (int)mh$.invokeExact(_Destination, _SizeInWords, _Source, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsncpy_s$MH() {
        return RuntimeHelper.requireNonNull(constants$5.wcsncpy_s$MH,"wcsncpy_s");
    }
    public static int wcsncpy_s ( Addressable _Destination,  long _SizeInWords,  Addressable _Source,  long _MaxCount) {
        var mh$ = wcsncpy_s$MH();
        try {
            return (int)mh$.invokeExact(_Destination, _SizeInWords, _Source, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstok_s$MH() {
        return RuntimeHelper.requireNonNull(constants$5.wcstok_s$MH,"wcstok_s");
    }
    public static MemoryAddress wcstok_s ( Addressable _String,  Addressable _Delimiter,  Addressable _Context) {
        var mh$ = wcstok_s$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String, _Delimiter, _Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsdup$MH() {
        return RuntimeHelper.requireNonNull(constants$6._wcsdup$MH,"_wcsdup");
    }
    public static MemoryAddress _wcsdup ( Addressable _String) {
        var mh$ = _wcsdup$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcscat$MH() {
        return RuntimeHelper.requireNonNull(constants$6.wcscat$MH,"wcscat");
    }
    public static MemoryAddress wcscat ( Addressable _Destination,  Addressable _Source) {
        var mh$ = wcscat$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Destination, _Source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcscmp$MH() {
        return RuntimeHelper.requireNonNull(constants$6.wcscmp$MH,"wcscmp");
    }
    public static int wcscmp ( Addressable _String1,  Addressable _String2) {
        var mh$ = wcscmp$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcscpy$MH() {
        return RuntimeHelper.requireNonNull(constants$6.wcscpy$MH,"wcscpy");
    }
    public static MemoryAddress wcscpy ( Addressable _Destination,  Addressable _Source) {
        var mh$ = wcscpy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Destination, _Source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcscspn$MH() {
        return RuntimeHelper.requireNonNull(constants$6.wcscspn$MH,"wcscspn");
    }
    public static long wcscspn ( Addressable _String,  Addressable _Control) {
        var mh$ = wcscspn$MH();
        try {
            return (long)mh$.invokeExact(_String, _Control);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcslen$MH() {
        return RuntimeHelper.requireNonNull(constants$6.wcslen$MH,"wcslen");
    }
    public static long wcslen ( Addressable _String) {
        var mh$ = wcslen$MH();
        try {
            return (long)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsnlen$MH() {
        return RuntimeHelper.requireNonNull(constants$7.wcsnlen$MH,"wcsnlen");
    }
    public static long wcsnlen ( Addressable _Source,  long _MaxCount) {
        var mh$ = wcsnlen$MH();
        try {
            return (long)mh$.invokeExact(_Source, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsnlen_s$MH() {
        return RuntimeHelper.requireNonNull(constants$7.wcsnlen_s$MH,"wcsnlen_s");
    }
    public static long wcsnlen_s ( Addressable _Source,  long _MaxCount) {
        var mh$ = wcsnlen_s$MH();
        try {
            return (long)mh$.invokeExact(_Source, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsncat$MH() {
        return RuntimeHelper.requireNonNull(constants$7.wcsncat$MH,"wcsncat");
    }
    public static MemoryAddress wcsncat ( Addressable _Destination,  Addressable _Source,  long _Count) {
        var mh$ = wcsncat$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Destination, _Source, _Count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsncmp$MH() {
        return RuntimeHelper.requireNonNull(constants$7.wcsncmp$MH,"wcsncmp");
    }
    public static int wcsncmp ( Addressable _String1,  Addressable _String2,  long _MaxCount) {
        var mh$ = wcsncmp$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsncpy$MH() {
        return RuntimeHelper.requireNonNull(constants$7.wcsncpy$MH,"wcsncpy");
    }
    public static MemoryAddress wcsncpy ( Addressable _Destination,  Addressable _Source,  long _Count) {
        var mh$ = wcsncpy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Destination, _Source, _Count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcspbrk$MH() {
        return RuntimeHelper.requireNonNull(constants$7.wcspbrk$MH,"wcspbrk");
    }
    public static MemoryAddress wcspbrk ( Addressable _String,  Addressable _Control) {
        var mh$ = wcspbrk$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String, _Control);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsspn$MH() {
        return RuntimeHelper.requireNonNull(constants$8.wcsspn$MH,"wcsspn");
    }
    public static long wcsspn ( Addressable _String,  Addressable _Control) {
        var mh$ = wcsspn$MH();
        try {
            return (long)mh$.invokeExact(_String, _Control);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstok$MH() {
        return RuntimeHelper.requireNonNull(constants$8.wcstok$MH,"wcstok");
    }
    public static MemoryAddress wcstok ( Addressable _String,  Addressable _Delimiter,  Addressable _Context) {
        var mh$ = wcstok$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String, _Delimiter, _Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstok$MH() {
        return RuntimeHelper.requireNonNull(constants$8._wcstok$MH,"_wcstok");
    }
    public static MemoryAddress _wcstok ( Addressable _String,  Addressable _Delimiter) {
        var mh$ = _wcstok$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String, _Delimiter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcserror$MH() {
        return RuntimeHelper.requireNonNull(constants$8._wcserror$MH,"_wcserror");
    }
    public static MemoryAddress _wcserror ( int _ErrorNumber) {
        var mh$ = _wcserror$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_ErrorNumber);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcserror_s$MH() {
        return RuntimeHelper.requireNonNull(constants$8._wcserror_s$MH,"_wcserror_s");
    }
    public static int _wcserror_s ( Addressable _Buffer,  long _SizeInWords,  int _ErrorNumber) {
        var mh$ = _wcserror_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _SizeInWords, _ErrorNumber);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __wcserror$MH() {
        return RuntimeHelper.requireNonNull(constants$8.__wcserror$MH,"__wcserror");
    }
    public static MemoryAddress __wcserror ( Addressable _String) {
        var mh$ = __wcserror$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __wcserror_s$MH() {
        return RuntimeHelper.requireNonNull(constants$9.__wcserror_s$MH,"__wcserror_s");
    }
    public static int __wcserror_s ( Addressable _Buffer,  long _SizeInWords,  Addressable _ErrorMessage) {
        var mh$ = __wcserror_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _SizeInWords, _ErrorMessage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsicmp$MH() {
        return RuntimeHelper.requireNonNull(constants$9._wcsicmp$MH,"_wcsicmp");
    }
    public static int _wcsicmp ( Addressable _String1,  Addressable _String2) {
        var mh$ = _wcsicmp$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsicmp_l$MH() {
        return RuntimeHelper.requireNonNull(constants$9._wcsicmp_l$MH,"_wcsicmp_l");
    }
    public static int _wcsicmp_l ( Addressable _String1,  Addressable _String2,  Addressable _Locale) {
        var mh$ = _wcsicmp_l$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsnicmp$MH() {
        return RuntimeHelper.requireNonNull(constants$9._wcsnicmp$MH,"_wcsnicmp");
    }
    public static int _wcsnicmp ( Addressable _String1,  Addressable _String2,  long _MaxCount) {
        var mh$ = _wcsnicmp$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsnicmp_l$MH() {
        return RuntimeHelper.requireNonNull(constants$9._wcsnicmp_l$MH,"_wcsnicmp_l");
    }
    public static int _wcsnicmp_l ( Addressable _String1,  Addressable _String2,  long _MaxCount,  Addressable _Locale) {
        var mh$ = _wcsnicmp_l$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsnset_s$MH() {
        return RuntimeHelper.requireNonNull(constants$9._wcsnset_s$MH,"_wcsnset_s");
    }
    public static int _wcsnset_s ( Addressable _Destination,  long _SizeInWords,  short _Value,  long _MaxCount) {
        var mh$ = _wcsnset_s$MH();
        try {
            return (int)mh$.invokeExact(_Destination, _SizeInWords, _Value, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsnset$MH() {
        return RuntimeHelper.requireNonNull(constants$10._wcsnset$MH,"_wcsnset");
    }
    public static MemoryAddress _wcsnset ( Addressable _String,  short _Value,  long _MaxCount) {
        var mh$ = _wcsnset$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String, _Value, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsrev$MH() {
        return RuntimeHelper.requireNonNull(constants$10._wcsrev$MH,"_wcsrev");
    }
    public static MemoryAddress _wcsrev ( Addressable _String) {
        var mh$ = _wcsrev$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsset_s$MH() {
        return RuntimeHelper.requireNonNull(constants$10._wcsset_s$MH,"_wcsset_s");
    }
    public static int _wcsset_s ( Addressable _Destination,  long _SizeInWords,  short _Value) {
        var mh$ = _wcsset_s$MH();
        try {
            return (int)mh$.invokeExact(_Destination, _SizeInWords, _Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsset$MH() {
        return RuntimeHelper.requireNonNull(constants$10._wcsset$MH,"_wcsset");
    }
    public static MemoryAddress _wcsset ( Addressable _String,  short _Value) {
        var mh$ = _wcsset$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String, _Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcslwr_s$MH() {
        return RuntimeHelper.requireNonNull(constants$10._wcslwr_s$MH,"_wcslwr_s");
    }
    public static int _wcslwr_s ( Addressable _String,  long _SizeInWords) {
        var mh$ = _wcslwr_s$MH();
        try {
            return (int)mh$.invokeExact(_String, _SizeInWords);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcslwr$MH() {
        return RuntimeHelper.requireNonNull(constants$10._wcslwr$MH,"_wcslwr");
    }
    public static MemoryAddress _wcslwr ( Addressable _String) {
        var mh$ = _wcslwr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcslwr_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$11._wcslwr_s_l$MH,"_wcslwr_s_l");
    }
    public static int _wcslwr_s_l ( Addressable _String,  long _SizeInWords,  Addressable _Locale) {
        var mh$ = _wcslwr_s_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _SizeInWords, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcslwr_l$MH() {
        return RuntimeHelper.requireNonNull(constants$11._wcslwr_l$MH,"_wcslwr_l");
    }
    public static MemoryAddress _wcslwr_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = _wcslwr_l$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsupr_s$MH() {
        return RuntimeHelper.requireNonNull(constants$11._wcsupr_s$MH,"_wcsupr_s");
    }
    public static int _wcsupr_s ( Addressable _String,  long _Size) {
        var mh$ = _wcsupr_s$MH();
        try {
            return (int)mh$.invokeExact(_String, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsupr$MH() {
        return RuntimeHelper.requireNonNull(constants$11._wcsupr$MH,"_wcsupr");
    }
    public static MemoryAddress _wcsupr ( Addressable _String) {
        var mh$ = _wcsupr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsupr_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$11._wcsupr_s_l$MH,"_wcsupr_s_l");
    }
    public static int _wcsupr_s_l ( Addressable _String,  long _Size,  Addressable _Locale) {
        var mh$ = _wcsupr_s_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _Size, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsupr_l$MH() {
        return RuntimeHelper.requireNonNull(constants$11._wcsupr_l$MH,"_wcsupr_l");
    }
    public static MemoryAddress _wcsupr_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = _wcsupr_l$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsxfrm$MH() {
        return RuntimeHelper.requireNonNull(constants$12.wcsxfrm$MH,"wcsxfrm");
    }
    public static long wcsxfrm ( Addressable _Destination,  Addressable _Source,  long _MaxCount) {
        var mh$ = wcsxfrm$MH();
        try {
            return (long)mh$.invokeExact(_Destination, _Source, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsxfrm_l$MH() {
        return RuntimeHelper.requireNonNull(constants$12._wcsxfrm_l$MH,"_wcsxfrm_l");
    }
    public static long _wcsxfrm_l ( Addressable _Destination,  Addressable _Source,  long _MaxCount,  Addressable _Locale) {
        var mh$ = _wcsxfrm_l$MH();
        try {
            return (long)mh$.invokeExact(_Destination, _Source, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcscoll$MH() {
        return RuntimeHelper.requireNonNull(constants$12.wcscoll$MH,"wcscoll");
    }
    public static int wcscoll ( Addressable _String1,  Addressable _String2) {
        var mh$ = wcscoll$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcscoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$12._wcscoll_l$MH,"_wcscoll_l");
    }
    public static int _wcscoll_l ( Addressable _String1,  Addressable _String2,  Addressable _Locale) {
        var mh$ = _wcscoll_l$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsicoll$MH() {
        return RuntimeHelper.requireNonNull(constants$12._wcsicoll$MH,"_wcsicoll");
    }
    public static int _wcsicoll ( Addressable _String1,  Addressable _String2) {
        var mh$ = _wcsicoll$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsicoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$12._wcsicoll_l$MH,"_wcsicoll_l");
    }
    public static int _wcsicoll_l ( Addressable _String1,  Addressable _String2,  Addressable _Locale) {
        var mh$ = _wcsicoll_l$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsncoll$MH() {
        return RuntimeHelper.requireNonNull(constants$13._wcsncoll$MH,"_wcsncoll");
    }
    public static int _wcsncoll ( Addressable _String1,  Addressable _String2,  long _MaxCount) {
        var mh$ = _wcsncoll$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsncoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$13._wcsncoll_l$MH,"_wcsncoll_l");
    }
    public static int _wcsncoll_l ( Addressable _String1,  Addressable _String2,  long _MaxCount,  Addressable _Locale) {
        var mh$ = _wcsncoll_l$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsnicoll$MH() {
        return RuntimeHelper.requireNonNull(constants$13._wcsnicoll$MH,"_wcsnicoll");
    }
    public static int _wcsnicoll ( Addressable _String1,  Addressable _String2,  long _MaxCount) {
        var mh$ = _wcsnicoll$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsnicoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$13._wcsnicoll_l$MH,"_wcsnicoll_l");
    }
    public static int _wcsnicoll_l ( Addressable _String1,  Addressable _String2,  long _MaxCount,  Addressable _Locale) {
        var mh$ = _wcsnicoll_l$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsdup$MH() {
        return RuntimeHelper.requireNonNull(constants$13.wcsdup$MH,"wcsdup");
    }
    public static MemoryAddress wcsdup ( Addressable _String) {
        var mh$ = wcsdup$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsicmp$MH() {
        return RuntimeHelper.requireNonNull(constants$13.wcsicmp$MH,"wcsicmp");
    }
    public static int wcsicmp ( Addressable _String1,  Addressable _String2) {
        var mh$ = wcsicmp$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsnicmp$MH() {
        return RuntimeHelper.requireNonNull(constants$14.wcsnicmp$MH,"wcsnicmp");
    }
    public static int wcsnicmp ( Addressable _String1,  Addressable _String2,  long _MaxCount) {
        var mh$ = wcsnicmp$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsnset$MH() {
        return RuntimeHelper.requireNonNull(constants$14.wcsnset$MH,"wcsnset");
    }
    public static MemoryAddress wcsnset ( Addressable _String,  short _Value,  long _MaxCount) {
        var mh$ = wcsnset$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String, _Value, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsrev$MH() {
        return RuntimeHelper.requireNonNull(constants$14.wcsrev$MH,"wcsrev");
    }
    public static MemoryAddress wcsrev ( Addressable _String) {
        var mh$ = wcsrev$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsset$MH() {
        return RuntimeHelper.requireNonNull(constants$14.wcsset$MH,"wcsset");
    }
    public static MemoryAddress wcsset ( Addressable _String,  short _Value) {
        var mh$ = wcsset$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String, _Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcslwr$MH() {
        return RuntimeHelper.requireNonNull(constants$14.wcslwr$MH,"wcslwr");
    }
    public static MemoryAddress wcslwr ( Addressable _String) {
        var mh$ = wcslwr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsupr$MH() {
        return RuntimeHelper.requireNonNull(constants$14.wcsupr$MH,"wcsupr");
    }
    public static MemoryAddress wcsupr ( Addressable _String) {
        var mh$ = wcsupr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsicoll$MH() {
        return RuntimeHelper.requireNonNull(constants$15.wcsicoll$MH,"wcsicoll");
    }
    public static int wcsicoll ( Addressable _String1,  Addressable _String2) {
        var mh$ = wcsicoll$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strcpy_s$MH() {
        return RuntimeHelper.requireNonNull(constants$15.strcpy_s$MH,"strcpy_s");
    }
    public static int strcpy_s ( Addressable _Destination,  long _SizeInBytes,  Addressable _Source) {
        var mh$ = strcpy_s$MH();
        try {
            return (int)mh$.invokeExact(_Destination, _SizeInBytes, _Source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strcat_s$MH() {
        return RuntimeHelper.requireNonNull(constants$15.strcat_s$MH,"strcat_s");
    }
    public static int strcat_s ( Addressable _Destination,  long _SizeInBytes,  Addressable _Source) {
        var mh$ = strcat_s$MH();
        try {
            return (int)mh$.invokeExact(_Destination, _SizeInBytes, _Source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strerror_s$MH() {
        return RuntimeHelper.requireNonNull(constants$15.strerror_s$MH,"strerror_s");
    }
    public static int strerror_s ( Addressable _Buffer,  long _SizeInBytes,  int _ErrorNumber) {
        var mh$ = strerror_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _SizeInBytes, _ErrorNumber);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strncat_s$MH() {
        return RuntimeHelper.requireNonNull(constants$15.strncat_s$MH,"strncat_s");
    }
    public static int strncat_s ( Addressable _Destination,  long _SizeInBytes,  Addressable _Source,  long _MaxCount) {
        var mh$ = strncat_s$MH();
        try {
            return (int)mh$.invokeExact(_Destination, _SizeInBytes, _Source, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strncpy_s$MH() {
        return RuntimeHelper.requireNonNull(constants$15.strncpy_s$MH,"strncpy_s");
    }
    public static int strncpy_s ( Addressable _Destination,  long _SizeInBytes,  Addressable _Source,  long _MaxCount) {
        var mh$ = strncpy_s$MH();
        try {
            return (int)mh$.invokeExact(_Destination, _SizeInBytes, _Source, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtok_s$MH() {
        return RuntimeHelper.requireNonNull(constants$16.strtok_s$MH,"strtok_s");
    }
    public static MemoryAddress strtok_s ( Addressable _String,  Addressable _Delimiter,  Addressable _Context) {
        var mh$ = strtok_s$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String, _Delimiter, _Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _memccpy$MH() {
        return RuntimeHelper.requireNonNull(constants$16._memccpy$MH,"_memccpy");
    }
    public static MemoryAddress _memccpy ( Addressable _Dst,  Addressable _Src,  int _Val,  long _MaxCount) {
        var mh$ = _memccpy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Dst, _Src, _Val, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strcat$MH() {
        return RuntimeHelper.requireNonNull(constants$16.strcat$MH,"strcat");
    }
    public static MemoryAddress strcat ( Addressable _Destination,  Addressable _Source) {
        var mh$ = strcat$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Destination, _Source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strcmp$MH() {
        return RuntimeHelper.requireNonNull(constants$16.strcmp$MH,"strcmp");
    }
    public static int strcmp ( Addressable _Str1,  Addressable _Str2) {
        var mh$ = strcmp$MH();
        try {
            return (int)mh$.invokeExact(_Str1, _Str2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strcmpi$MH() {
        return RuntimeHelper.requireNonNull(constants$16._strcmpi$MH,"_strcmpi");
    }
    public static int _strcmpi ( Addressable _String1,  Addressable _String2) {
        var mh$ = _strcmpi$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strcoll$MH() {
        return RuntimeHelper.requireNonNull(constants$16.strcoll$MH,"strcoll");
    }
    public static int strcoll ( Addressable _String1,  Addressable _String2) {
        var mh$ = strcoll$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strcoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$17._strcoll_l$MH,"_strcoll_l");
    }
    public static int _strcoll_l ( Addressable _String1,  Addressable _String2,  Addressable _Locale) {
        var mh$ = _strcoll_l$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strcpy$MH() {
        return RuntimeHelper.requireNonNull(constants$17.strcpy$MH,"strcpy");
    }
    public static MemoryAddress strcpy ( Addressable _Destination,  Addressable _Source) {
        var mh$ = strcpy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Destination, _Source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strcspn$MH() {
        return RuntimeHelper.requireNonNull(constants$17.strcspn$MH,"strcspn");
    }
    public static long strcspn ( Addressable _Str,  Addressable _Control) {
        var mh$ = strcspn$MH();
        try {
            return (long)mh$.invokeExact(_Str, _Control);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strdup$MH() {
        return RuntimeHelper.requireNonNull(constants$17._strdup$MH,"_strdup");
    }
    public static MemoryAddress _strdup ( Addressable _Source) {
        var mh$ = _strdup$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strerror$MH() {
        return RuntimeHelper.requireNonNull(constants$17._strerror$MH,"_strerror");
    }
    public static MemoryAddress _strerror ( Addressable _ErrorMessage) {
        var mh$ = _strerror$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_ErrorMessage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strerror_s$MH() {
        return RuntimeHelper.requireNonNull(constants$17._strerror_s$MH,"_strerror_s");
    }
    public static int _strerror_s ( Addressable _Buffer,  long _SizeInBytes,  Addressable _ErrorMessage) {
        var mh$ = _strerror_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _SizeInBytes, _ErrorMessage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strerror$MH() {
        return RuntimeHelper.requireNonNull(constants$18.strerror$MH,"strerror");
    }
    public static MemoryAddress strerror ( int _ErrorMessage) {
        var mh$ = strerror$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_ErrorMessage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _stricmp$MH() {
        return RuntimeHelper.requireNonNull(constants$18._stricmp$MH,"_stricmp");
    }
    public static int _stricmp ( Addressable _String1,  Addressable _String2) {
        var mh$ = _stricmp$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _stricoll$MH() {
        return RuntimeHelper.requireNonNull(constants$18._stricoll$MH,"_stricoll");
    }
    public static int _stricoll ( Addressable _String1,  Addressable _String2) {
        var mh$ = _stricoll$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _stricoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$18._stricoll_l$MH,"_stricoll_l");
    }
    public static int _stricoll_l ( Addressable _String1,  Addressable _String2,  Addressable _Locale) {
        var mh$ = _stricoll_l$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _stricmp_l$MH() {
        return RuntimeHelper.requireNonNull(constants$18._stricmp_l$MH,"_stricmp_l");
    }
    public static int _stricmp_l ( Addressable _String1,  Addressable _String2,  Addressable _Locale) {
        var mh$ = _stricmp_l$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strlen$MH() {
        return RuntimeHelper.requireNonNull(constants$18.strlen$MH,"strlen");
    }
    public static long strlen ( Addressable _Str) {
        var mh$ = strlen$MH();
        try {
            return (long)mh$.invokeExact(_Str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strlwr_s$MH() {
        return RuntimeHelper.requireNonNull(constants$19._strlwr_s$MH,"_strlwr_s");
    }
    public static int _strlwr_s ( Addressable _String,  long _Size) {
        var mh$ = _strlwr_s$MH();
        try {
            return (int)mh$.invokeExact(_String, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strlwr$MH() {
        return RuntimeHelper.requireNonNull(constants$19._strlwr$MH,"_strlwr");
    }
    public static MemoryAddress _strlwr ( Addressable _String) {
        var mh$ = _strlwr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strlwr_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$19._strlwr_s_l$MH,"_strlwr_s_l");
    }
    public static int _strlwr_s_l ( Addressable _String,  long _Size,  Addressable _Locale) {
        var mh$ = _strlwr_s_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _Size, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strlwr_l$MH() {
        return RuntimeHelper.requireNonNull(constants$19._strlwr_l$MH,"_strlwr_l");
    }
    public static MemoryAddress _strlwr_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = _strlwr_l$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strncat$MH() {
        return RuntimeHelper.requireNonNull(constants$19.strncat$MH,"strncat");
    }
    public static MemoryAddress strncat ( Addressable _Destination,  Addressable _Source,  long _Count) {
        var mh$ = strncat$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Destination, _Source, _Count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strncmp$MH() {
        return RuntimeHelper.requireNonNull(constants$19.strncmp$MH,"strncmp");
    }
    public static int strncmp ( Addressable _Str1,  Addressable _Str2,  long _MaxCount) {
        var mh$ = strncmp$MH();
        try {
            return (int)mh$.invokeExact(_Str1, _Str2, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strnicmp$MH() {
        return RuntimeHelper.requireNonNull(constants$20._strnicmp$MH,"_strnicmp");
    }
    public static int _strnicmp ( Addressable _String1,  Addressable _String2,  long _MaxCount) {
        var mh$ = _strnicmp$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strnicmp_l$MH() {
        return RuntimeHelper.requireNonNull(constants$20._strnicmp_l$MH,"_strnicmp_l");
    }
    public static int _strnicmp_l ( Addressable _String1,  Addressable _String2,  long _MaxCount,  Addressable _Locale) {
        var mh$ = _strnicmp_l$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strnicoll$MH() {
        return RuntimeHelper.requireNonNull(constants$20._strnicoll$MH,"_strnicoll");
    }
    public static int _strnicoll ( Addressable _String1,  Addressable _String2,  long _MaxCount) {
        var mh$ = _strnicoll$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strnicoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$20._strnicoll_l$MH,"_strnicoll_l");
    }
    public static int _strnicoll_l ( Addressable _String1,  Addressable _String2,  long _MaxCount,  Addressable _Locale) {
        var mh$ = _strnicoll_l$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strncoll$MH() {
        return RuntimeHelper.requireNonNull(constants$20._strncoll$MH,"_strncoll");
    }
    public static int _strncoll ( Addressable _String1,  Addressable _String2,  long _MaxCount) {
        var mh$ = _strncoll$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strncoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$20._strncoll_l$MH,"_strncoll_l");
    }
    public static int _strncoll_l ( Addressable _String1,  Addressable _String2,  long _MaxCount,  Addressable _Locale) {
        var mh$ = _strncoll_l$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __strncnt$MH() {
        return RuntimeHelper.requireNonNull(constants$21.__strncnt$MH,"__strncnt");
    }
    public static long __strncnt ( Addressable _String,  long _Count) {
        var mh$ = __strncnt$MH();
        try {
            return (long)mh$.invokeExact(_String, _Count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strncpy$MH() {
        return RuntimeHelper.requireNonNull(constants$21.strncpy$MH,"strncpy");
    }
    public static MemoryAddress strncpy ( Addressable _Destination,  Addressable _Source,  long _Count) {
        var mh$ = strncpy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Destination, _Source, _Count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strnlen$MH() {
        return RuntimeHelper.requireNonNull(constants$21.strnlen$MH,"strnlen");
    }
    public static long strnlen ( Addressable _String,  long _MaxCount) {
        var mh$ = strnlen$MH();
        try {
            return (long)mh$.invokeExact(_String, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strnlen_s$MH() {
        return RuntimeHelper.requireNonNull(constants$21.strnlen_s$MH,"strnlen_s");
    }
    public static long strnlen_s ( Addressable _String,  long _MaxCount) {
        var mh$ = strnlen_s$MH();
        try {
            return (long)mh$.invokeExact(_String, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strnset_s$MH() {
        return RuntimeHelper.requireNonNull(constants$21._strnset_s$MH,"_strnset_s");
    }
    public static int _strnset_s ( Addressable _String,  long _SizeInBytes,  int _Value,  long _MaxCount) {
        var mh$ = _strnset_s$MH();
        try {
            return (int)mh$.invokeExact(_String, _SizeInBytes, _Value, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strnset$MH() {
        return RuntimeHelper.requireNonNull(constants$21._strnset$MH,"_strnset");
    }
    public static MemoryAddress _strnset ( Addressable _Destination,  int _Value,  long _Count) {
        var mh$ = _strnset$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Destination, _Value, _Count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strpbrk$MH() {
        return RuntimeHelper.requireNonNull(constants$22.strpbrk$MH,"strpbrk");
    }
    public static MemoryAddress strpbrk ( Addressable _Str,  Addressable _Control) {
        var mh$ = strpbrk$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Str, _Control);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strrev$MH() {
        return RuntimeHelper.requireNonNull(constants$22._strrev$MH,"_strrev");
    }
    public static MemoryAddress _strrev ( Addressable _Str) {
        var mh$ = _strrev$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strset_s$MH() {
        return RuntimeHelper.requireNonNull(constants$22._strset_s$MH,"_strset_s");
    }
    public static int _strset_s ( Addressable _Destination,  long _DestinationSize,  int _Value) {
        var mh$ = _strset_s$MH();
        try {
            return (int)mh$.invokeExact(_Destination, _DestinationSize, _Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strset$MH() {
        return RuntimeHelper.requireNonNull(constants$22._strset$MH,"_strset");
    }
    public static MemoryAddress _strset ( Addressable _Destination,  int _Value) {
        var mh$ = _strset$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Destination, _Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strspn$MH() {
        return RuntimeHelper.requireNonNull(constants$22.strspn$MH,"strspn");
    }
    public static long strspn ( Addressable _Str,  Addressable _Control) {
        var mh$ = strspn$MH();
        try {
            return (long)mh$.invokeExact(_Str, _Control);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtok$MH() {
        return RuntimeHelper.requireNonNull(constants$22.strtok$MH,"strtok");
    }
    public static MemoryAddress strtok ( Addressable _String,  Addressable _Delimiter) {
        var mh$ = strtok$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String, _Delimiter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strupr_s$MH() {
        return RuntimeHelper.requireNonNull(constants$23._strupr_s$MH,"_strupr_s");
    }
    public static int _strupr_s ( Addressable _String,  long _Size) {
        var mh$ = _strupr_s$MH();
        try {
            return (int)mh$.invokeExact(_String, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strupr$MH() {
        return RuntimeHelper.requireNonNull(constants$23._strupr$MH,"_strupr");
    }
    public static MemoryAddress _strupr ( Addressable _String) {
        var mh$ = _strupr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strupr_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$23._strupr_s_l$MH,"_strupr_s_l");
    }
    public static int _strupr_s_l ( Addressable _String,  long _Size,  Addressable _Locale) {
        var mh$ = _strupr_s_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _Size, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strupr_l$MH() {
        return RuntimeHelper.requireNonNull(constants$23._strupr_l$MH,"_strupr_l");
    }
    public static MemoryAddress _strupr_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = _strupr_l$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strxfrm$MH() {
        return RuntimeHelper.requireNonNull(constants$23.strxfrm$MH,"strxfrm");
    }
    public static long strxfrm ( Addressable _Destination,  Addressable _Source,  long _MaxCount) {
        var mh$ = strxfrm$MH();
        try {
            return (long)mh$.invokeExact(_Destination, _Source, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strxfrm_l$MH() {
        return RuntimeHelper.requireNonNull(constants$23._strxfrm_l$MH,"_strxfrm_l");
    }
    public static long _strxfrm_l ( Addressable _Destination,  Addressable _Source,  long _MaxCount,  Addressable _Locale) {
        var mh$ = _strxfrm_l$MH();
        try {
            return (long)mh$.invokeExact(_Destination, _Source, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strdup$MH() {
        return RuntimeHelper.requireNonNull(constants$24.strdup$MH,"strdup");
    }
    public static MemoryAddress strdup ( Addressable _String) {
        var mh$ = strdup$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strcmpi$MH() {
        return RuntimeHelper.requireNonNull(constants$24.strcmpi$MH,"strcmpi");
    }
    public static int strcmpi ( Addressable _String1,  Addressable _String2) {
        var mh$ = strcmpi$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle stricmp$MH() {
        return RuntimeHelper.requireNonNull(constants$24.stricmp$MH,"stricmp");
    }
    public static int stricmp ( Addressable _String1,  Addressable _String2) {
        var mh$ = stricmp$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strlwr$MH() {
        return RuntimeHelper.requireNonNull(constants$24.strlwr$MH,"strlwr");
    }
    public static MemoryAddress strlwr ( Addressable _String) {
        var mh$ = strlwr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strnicmp$MH() {
        return RuntimeHelper.requireNonNull(constants$24.strnicmp$MH,"strnicmp");
    }
    public static int strnicmp ( Addressable _String1,  Addressable _String2,  long _MaxCount) {
        var mh$ = strnicmp$MH();
        try {
            return (int)mh$.invokeExact(_String1, _String2, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strnset$MH() {
        return RuntimeHelper.requireNonNull(constants$24.strnset$MH,"strnset");
    }
    public static MemoryAddress strnset ( Addressable _String,  int _Value,  long _MaxCount) {
        var mh$ = strnset$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String, _Value, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strrev$MH() {
        return RuntimeHelper.requireNonNull(constants$25.strrev$MH,"strrev");
    }
    public static MemoryAddress strrev ( Addressable _String) {
        var mh$ = strrev$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strset$MH() {
        return RuntimeHelper.requireNonNull(constants$25.strset$MH,"strset");
    }
    public static MemoryAddress strset ( Addressable _String,  int _Value) {
        var mh$ = strset$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String, _Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strupr$MH() {
        return RuntimeHelper.requireNonNull(constants$25.strupr$MH,"strupr");
    }
    public static MemoryAddress strupr ( Addressable _String) {
        var mh$ = strupr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __local_stdio_printf_options$MH() {
        return RuntimeHelper.requireNonNull(constants$25.__local_stdio_printf_options$MH,"__local_stdio_printf_options");
    }
    public static MemoryAddress __local_stdio_printf_options () {
        var mh$ = __local_stdio_printf_options$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __local_stdio_scanf_options$MH() {
        return RuntimeHelper.requireNonNull(constants$25.__local_stdio_scanf_options$MH,"__local_stdio_scanf_options");
    }
    public static MemoryAddress __local_stdio_scanf_options () {
        var mh$ = __local_stdio_scanf_options$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __acrt_iob_func$MH() {
        return RuntimeHelper.requireNonNull(constants$25.__acrt_iob_func$MH,"__acrt_iob_func");
    }
    public static MemoryAddress __acrt_iob_func ( int _Ix) {
        var mh$ = __acrt_iob_func$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Ix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgetwc$MH() {
        return RuntimeHelper.requireNonNull(constants$26.fgetwc$MH,"fgetwc");
    }
    public static short fgetwc ( Addressable _Stream) {
        var mh$ = fgetwc$MH();
        try {
            return (short)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fgetwchar$MH() {
        return RuntimeHelper.requireNonNull(constants$26._fgetwchar$MH,"_fgetwchar");
    }
    public static short _fgetwchar () {
        var mh$ = _fgetwchar$MH();
        try {
            return (short)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fputwc$MH() {
        return RuntimeHelper.requireNonNull(constants$26.fputwc$MH,"fputwc");
    }
    public static short fputwc ( short _Character,  Addressable _Stream) {
        var mh$ = fputwc$MH();
        try {
            return (short)mh$.invokeExact(_Character, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fputwchar$MH() {
        return RuntimeHelper.requireNonNull(constants$26._fputwchar$MH,"_fputwchar");
    }
    public static short _fputwchar ( short _Character) {
        var mh$ = _fputwchar$MH();
        try {
            return (short)mh$.invokeExact(_Character);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getwc$MH() {
        return RuntimeHelper.requireNonNull(constants$26.getwc$MH,"getwc");
    }
    public static short getwc ( Addressable _Stream) {
        var mh$ = getwc$MH();
        try {
            return (short)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getwchar$MH() {
        return RuntimeHelper.requireNonNull(constants$26.getwchar$MH,"getwchar");
    }
    public static short getwchar () {
        var mh$ = getwchar$MH();
        try {
            return (short)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgetws$MH() {
        return RuntimeHelper.requireNonNull(constants$27.fgetws$MH,"fgetws");
    }
    public static MemoryAddress fgetws ( Addressable _Buffer,  int _BufferCount,  Addressable _Stream) {
        var mh$ = fgetws$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Buffer, _BufferCount, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fputws$MH() {
        return RuntimeHelper.requireNonNull(constants$27.fputws$MH,"fputws");
    }
    public static int fputws ( Addressable _Buffer,  Addressable _Stream) {
        var mh$ = fputws$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _getws_s$MH() {
        return RuntimeHelper.requireNonNull(constants$27._getws_s$MH,"_getws_s");
    }
    public static MemoryAddress _getws_s ( Addressable _Buffer,  long _BufferCount) {
        var mh$ = _getws_s$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Buffer, _BufferCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putwc$MH() {
        return RuntimeHelper.requireNonNull(constants$27.putwc$MH,"putwc");
    }
    public static short putwc ( short _Character,  Addressable _Stream) {
        var mh$ = putwc$MH();
        try {
            return (short)mh$.invokeExact(_Character, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putwchar$MH() {
        return RuntimeHelper.requireNonNull(constants$27.putwchar$MH,"putwchar");
    }
    public static short putwchar ( short _Character) {
        var mh$ = putwchar$MH();
        try {
            return (short)mh$.invokeExact(_Character);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _putws$MH() {
        return RuntimeHelper.requireNonNull(constants$27._putws$MH,"_putws");
    }
    public static int _putws ( Addressable _Buffer) {
        var mh$ = _putws$MH();
        try {
            return (int)mh$.invokeExact(_Buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ungetwc$MH() {
        return RuntimeHelper.requireNonNull(constants$28.ungetwc$MH,"ungetwc");
    }
    public static short ungetwc ( short _Character,  Addressable _Stream) {
        var mh$ = ungetwc$MH();
        try {
            return (short)mh$.invokeExact(_Character, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfdopen$MH() {
        return RuntimeHelper.requireNonNull(constants$28._wfdopen$MH,"_wfdopen");
    }
    public static MemoryAddress _wfdopen ( int _FileHandle,  Addressable _Mode) {
        var mh$ = _wfdopen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_FileHandle, _Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfopen$MH() {
        return RuntimeHelper.requireNonNull(constants$28._wfopen$MH,"_wfopen");
    }
    public static MemoryAddress _wfopen ( Addressable _FileName,  Addressable _Mode) {
        var mh$ = _wfopen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_FileName, _Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfopen_s$MH() {
        return RuntimeHelper.requireNonNull(constants$28._wfopen_s$MH,"_wfopen_s");
    }
    public static int _wfopen_s ( Addressable _Stream,  Addressable _FileName,  Addressable _Mode) {
        var mh$ = _wfopen_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _FileName, _Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfreopen$MH() {
        return RuntimeHelper.requireNonNull(constants$28._wfreopen$MH,"_wfreopen");
    }
    public static MemoryAddress _wfreopen ( Addressable _FileName,  Addressable _Mode,  Addressable _OldStream) {
        var mh$ = _wfreopen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_FileName, _Mode, _OldStream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfreopen_s$MH() {
        return RuntimeHelper.requireNonNull(constants$28._wfreopen_s$MH,"_wfreopen_s");
    }
    public static int _wfreopen_s ( Addressable _Stream,  Addressable _FileName,  Addressable _Mode,  Addressable _OldStream) {
        var mh$ = _wfreopen_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _FileName, _Mode, _OldStream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfsopen$MH() {
        return RuntimeHelper.requireNonNull(constants$29._wfsopen$MH,"_wfsopen");
    }
    public static MemoryAddress _wfsopen ( Addressable _FileName,  Addressable _Mode,  int _ShFlag) {
        var mh$ = _wfsopen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_FileName, _Mode, _ShFlag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wperror$MH() {
        return RuntimeHelper.requireNonNull(constants$29._wperror$MH,"_wperror");
    }
    public static void _wperror ( Addressable _ErrorMessage) {
        var mh$ = _wperror$MH();
        try {
            mh$.invokeExact(_ErrorMessage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wpopen$MH() {
        return RuntimeHelper.requireNonNull(constants$29._wpopen$MH,"_wpopen");
    }
    public static MemoryAddress _wpopen ( Addressable _Command,  Addressable _Mode) {
        var mh$ = _wpopen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Command, _Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wremove$MH() {
        return RuntimeHelper.requireNonNull(constants$29._wremove$MH,"_wremove");
    }
    public static int _wremove ( Addressable _FileName) {
        var mh$ = _wremove$MH();
        try {
            return (int)mh$.invokeExact(_FileName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtempnam$MH() {
        return RuntimeHelper.requireNonNull(constants$29._wtempnam$MH,"_wtempnam");
    }
    public static MemoryAddress _wtempnam ( Addressable _Directory,  Addressable _FilePrefix) {
        var mh$ = _wtempnam$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Directory, _FilePrefix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtmpnam_s$MH() {
        return RuntimeHelper.requireNonNull(constants$29._wtmpnam_s$MH,"_wtmpnam_s");
    }
    public static int _wtmpnam_s ( Addressable _Buffer,  long _BufferCount) {
        var mh$ = _wtmpnam_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtmpnam$MH() {
        return RuntimeHelper.requireNonNull(constants$30._wtmpnam$MH,"_wtmpnam");
    }
    public static MemoryAddress _wtmpnam ( Addressable _Buffer) {
        var mh$ = _wtmpnam$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fgetwc_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$30._fgetwc_nolock$MH,"_fgetwc_nolock");
    }
    public static short _fgetwc_nolock ( Addressable _Stream) {
        var mh$ = _fgetwc_nolock$MH();
        try {
            return (short)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fputwc_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$30._fputwc_nolock$MH,"_fputwc_nolock");
    }
    public static short _fputwc_nolock ( short _Character,  Addressable _Stream) {
        var mh$ = _fputwc_nolock$MH();
        try {
            return (short)mh$.invokeExact(_Character, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _getwc_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$30._getwc_nolock$MH,"_getwc_nolock");
    }
    public static short _getwc_nolock ( Addressable _Stream) {
        var mh$ = _getwc_nolock$MH();
        try {
            return (short)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _putwc_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$30._putwc_nolock$MH,"_putwc_nolock");
    }
    public static short _putwc_nolock ( short _Character,  Addressable _Stream) {
        var mh$ = _putwc_nolock$MH();
        try {
            return (short)mh$.invokeExact(_Character, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ungetwc_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$30._ungetwc_nolock$MH,"_ungetwc_nolock");
    }
    public static short _ungetwc_nolock ( short _Character,  Addressable _Stream) {
        var mh$ = _ungetwc_nolock$MH();
        try {
            return (short)mh$.invokeExact(_Character, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vfwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$31.__stdio_common_vfwprintf$MH,"__stdio_common_vfwprintf");
    }
    public static int __stdio_common_vfwprintf ( long _Options,  Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vfwprintf$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vfwprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$31.__stdio_common_vfwprintf_s$MH,"__stdio_common_vfwprintf_s");
    }
    public static int __stdio_common_vfwprintf_s ( long _Options,  Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vfwprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vfwprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$31.__stdio_common_vfwprintf_p$MH,"__stdio_common_vfwprintf_p");
    }
    public static int __stdio_common_vfwprintf_p ( long _Options,  Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vfwprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfwprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$31._vfwprintf_l$MH,"_vfwprintf_l");
    }
    public static int _vfwprintf_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vfwprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$31.vfwprintf$MH,"vfwprintf");
    }
    public static int vfwprintf ( Addressable _Stream,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vfwprintf$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfwprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$31._vfwprintf_s_l$MH,"_vfwprintf_s_l");
    }
    public static int _vfwprintf_s_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vfwprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfwprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$32.vfwprintf_s$MH,"vfwprintf_s");
    }
    public static int vfwprintf_s ( Addressable _Stream,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vfwprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfwprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$32._vfwprintf_p_l$MH,"_vfwprintf_p_l");
    }
    public static int _vfwprintf_p_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vfwprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfwprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$32._vfwprintf_p$MH,"_vfwprintf_p");
    }
    public static int _vfwprintf_p ( Addressable _Stream,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vfwprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vwprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$32._vwprintf_l$MH,"_vwprintf_l");
    }
    public static int _vwprintf_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vwprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$32.vwprintf$MH,"vwprintf");
    }
    public static int vwprintf ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = vwprintf$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vwprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$32._vwprintf_s_l$MH,"_vwprintf_s_l");
    }
    public static int _vwprintf_s_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vwprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vwprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$33.vwprintf_s$MH,"vwprintf_s");
    }
    public static int vwprintf_s ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = vwprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vwprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$33._vwprintf_p_l$MH,"_vwprintf_p_l");
    }
    public static int _vwprintf_p_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vwprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vwprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$33._vwprintf_p$MH,"_vwprintf_p");
    }
    public static int _vwprintf_p ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vwprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fwprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$33._fwprintf_l$MH,"_fwprintf_l");
    }
    public static int _fwprintf_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _fwprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$33.fwprintf$MH,"fwprintf");
    }
    public static int fwprintf ( Addressable _Stream,  Addressable _Format, Object... x2) {
        var mh$ = fwprintf$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fwprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$33._fwprintf_s_l$MH,"_fwprintf_s_l");
    }
    public static int _fwprintf_s_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _fwprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fwprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$34.fwprintf_s$MH,"fwprintf_s");
    }
    public static int fwprintf_s ( Addressable _Stream,  Addressable _Format, Object... x2) {
        var mh$ = fwprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fwprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$34._fwprintf_p_l$MH,"_fwprintf_p_l");
    }
    public static int _fwprintf_p_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _fwprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fwprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$34._fwprintf_p$MH,"_fwprintf_p");
    }
    public static int _fwprintf_p ( Addressable _Stream,  Addressable _Format, Object... x2) {
        var mh$ = _fwprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$34._wprintf_l$MH,"_wprintf_l");
    }
    public static int _wprintf_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _wprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$34.wprintf$MH,"wprintf");
    }
    public static int wprintf ( Addressable _Format, Object... x1) {
        var mh$ = wprintf$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$34._wprintf_s_l$MH,"_wprintf_s_l");
    }
    public static int _wprintf_s_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _wprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$35.wprintf_s$MH,"wprintf_s");
    }
    public static int wprintf_s ( Addressable _Format, Object... x1) {
        var mh$ = wprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$35._wprintf_p_l$MH,"_wprintf_p_l");
    }
    public static int _wprintf_p_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _wprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$35._wprintf_p$MH,"_wprintf_p");
    }
    public static int _wprintf_p ( Addressable _Format, Object... x1) {
        var mh$ = _wprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vfwscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$35.__stdio_common_vfwscanf$MH,"__stdio_common_vfwscanf");
    }
    public static int __stdio_common_vfwscanf ( long _Options,  Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vfwscanf$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfwscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$35._vfwscanf_l$MH,"_vfwscanf_l");
    }
    public static int _vfwscanf_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vfwscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfwscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$35.vfwscanf$MH,"vfwscanf");
    }
    public static int vfwscanf ( Addressable _Stream,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vfwscanf$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfwscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$36._vfwscanf_s_l$MH,"_vfwscanf_s_l");
    }
    public static int _vfwscanf_s_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vfwscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfwscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$36.vfwscanf_s$MH,"vfwscanf_s");
    }
    public static int vfwscanf_s ( Addressable _Stream,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vfwscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vwscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$36._vwscanf_l$MH,"_vwscanf_l");
    }
    public static int _vwscanf_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vwscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vwscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$36.vwscanf$MH,"vwscanf");
    }
    public static int vwscanf ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = vwscanf$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vwscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$36._vwscanf_s_l$MH,"_vwscanf_s_l");
    }
    public static int _vwscanf_s_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vwscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vwscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$36.vwscanf_s$MH,"vwscanf_s");
    }
    public static int vwscanf_s ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = vwscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fwscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$37._fwscanf_l$MH,"_fwscanf_l");
    }
    public static int _fwscanf_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _fwscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fwscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$37.fwscanf$MH,"fwscanf");
    }
    public static int fwscanf ( Addressable _Stream,  Addressable _Format, Object... x2) {
        var mh$ = fwscanf$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fwscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$37._fwscanf_s_l$MH,"_fwscanf_s_l");
    }
    public static int _fwscanf_s_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _fwscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fwscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$37.fwscanf_s$MH,"fwscanf_s");
    }
    public static int fwscanf_s ( Addressable _Stream,  Addressable _Format, Object... x2) {
        var mh$ = fwscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$37._wscanf_l$MH,"_wscanf_l");
    }
    public static int _wscanf_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _wscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$37.wscanf$MH,"wscanf");
    }
    public static int wscanf ( Addressable _Format, Object... x1) {
        var mh$ = wscanf$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$38._wscanf_s_l$MH,"_wscanf_s_l");
    }
    public static int _wscanf_s_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _wscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$38.wscanf_s$MH,"wscanf_s");
    }
    public static int wscanf_s ( Addressable _Format, Object... x1) {
        var mh$ = wscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vswprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$38.__stdio_common_vswprintf$MH,"__stdio_common_vswprintf");
    }
    public static int __stdio_common_vswprintf ( long _Options,  Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vswprintf$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vswprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$38.__stdio_common_vswprintf_s$MH,"__stdio_common_vswprintf_s");
    }
    public static int __stdio_common_vswprintf_s ( long _Options,  Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vswprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vsnwprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$38.__stdio_common_vsnwprintf_s$MH,"__stdio_common_vsnwprintf_s");
    }
    public static int __stdio_common_vsnwprintf_s ( long _Options,  Addressable _Buffer,  long _BufferCount,  long _MaxCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vsnwprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vswprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$38.__stdio_common_vswprintf_p$MH,"__stdio_common_vswprintf_p");
    }
    public static int __stdio_common_vswprintf_p ( long _Options,  Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vswprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnwprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$39._vsnwprintf_l$MH,"_vsnwprintf_l");
    }
    public static int _vsnwprintf_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vsnwprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnwprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$39._vsnwprintf_s_l$MH,"_vsnwprintf_s_l");
    }
    public static int _vsnwprintf_s_l ( Addressable _Buffer,  long _BufferCount,  long _MaxCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vsnwprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnwprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$39._vsnwprintf_s$MH,"_vsnwprintf_s");
    }
    public static int _vsnwprintf_s ( Addressable _Buffer,  long _BufferCount,  long _MaxCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vsnwprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _MaxCount, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$39._snwprintf$MH,"_snwprintf");
    }
    public static int _snwprintf ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = _snwprintf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$39._vsnwprintf$MH,"_vsnwprintf");
    }
    public static int _vsnwprintf ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Args) {
        var mh$ = _vsnwprintf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vswprintf_c_l$MH() {
        return RuntimeHelper.requireNonNull(constants$39._vswprintf_c_l$MH,"_vswprintf_c_l");
    }
    public static int _vswprintf_c_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vswprintf_c_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vswprintf_c$MH() {
        return RuntimeHelper.requireNonNull(constants$40._vswprintf_c$MH,"_vswprintf_c");
    }
    public static int _vswprintf_c ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vswprintf_c$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vswprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$40._vswprintf_l$MH,"_vswprintf_l");
    }
    public static int _vswprintf_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vswprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __vswprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$40.__vswprintf_l$MH,"__vswprintf_l");
    }
    public static int __vswprintf_l ( Addressable _Buffer,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __vswprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vswprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$40._vswprintf$MH,"_vswprintf");
    }
    public static int _vswprintf ( Addressable _Buffer,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vswprintf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vswprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$40.vswprintf$MH,"vswprintf");
    }
    public static int vswprintf ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vswprintf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vswprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$40._vswprintf_s_l$MH,"_vswprintf_s_l");
    }
    public static int _vswprintf_s_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vswprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vswprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$41.vswprintf_s$MH,"vswprintf_s");
    }
    public static int vswprintf_s ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vswprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vswprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$41._vswprintf_p_l$MH,"_vswprintf_p_l");
    }
    public static int _vswprintf_p_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vswprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vswprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$41._vswprintf_p$MH,"_vswprintf_p");
    }
    public static int _vswprintf_p ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vswprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscwprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$41._vscwprintf_l$MH,"_vscwprintf_l");
    }
    public static int _vscwprintf_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vscwprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$41._vscwprintf$MH,"_vscwprintf");
    }
    public static int _vscwprintf ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vscwprintf$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscwprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$41._vscwprintf_p_l$MH,"_vscwprintf_p_l");
    }
    public static int _vscwprintf_p_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vscwprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscwprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$42._vscwprintf_p$MH,"_vscwprintf_p");
    }
    public static int _vscwprintf_p ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vscwprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __swprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$42.__swprintf_l$MH,"__swprintf_l");
    }
    public static int __swprintf_l ( Addressable _Buffer,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = __swprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$42._swprintf_l$MH,"_swprintf_l");
    }
    public static int _swprintf_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _swprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$42._swprintf$MH,"_swprintf");
    }
    public static int _swprintf ( Addressable _Buffer,  Addressable _Format, Object... x2) {
        var mh$ = _swprintf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle swprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$42.swprintf$MH,"swprintf");
    }
    public static int swprintf ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = swprintf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$42._swprintf_s_l$MH,"_swprintf_s_l");
    }
    public static int _swprintf_s_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _swprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle swprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$43.swprintf_s$MH,"swprintf_s");
    }
    public static int swprintf_s ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = swprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$43._swprintf_p_l$MH,"_swprintf_p_l");
    }
    public static int _swprintf_p_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _swprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$43._swprintf_p$MH,"_swprintf_p");
    }
    public static int _swprintf_p ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = _swprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swprintf_c_l$MH() {
        return RuntimeHelper.requireNonNull(constants$43._swprintf_c_l$MH,"_swprintf_c_l");
    }
    public static int _swprintf_c_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _swprintf_c_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swprintf_c$MH() {
        return RuntimeHelper.requireNonNull(constants$43._swprintf_c$MH,"_swprintf_c");
    }
    public static int _swprintf_c ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = _swprintf_c$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snwprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$43._snwprintf_l$MH,"_snwprintf_l");
    }
    public static int _snwprintf_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _snwprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snwprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$44._snwprintf_s_l$MH,"_snwprintf_s_l");
    }
    public static int _snwprintf_s_l ( Addressable _Buffer,  long _BufferCount,  long _MaxCount,  Addressable _Format,  Addressable _Locale, Object... x5) {
        var mh$ = _snwprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _MaxCount, _Format, _Locale, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snwprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$44._snwprintf_s$MH,"_snwprintf_s");
    }
    public static int _snwprintf_s ( Addressable _Buffer,  long _BufferCount,  long _MaxCount,  Addressable _Format, Object... x4) {
        var mh$ = _snwprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _MaxCount, _Format, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scwprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$44._scwprintf_l$MH,"_scwprintf_l");
    }
    public static int _scwprintf_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _scwprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$44._scwprintf$MH,"_scwprintf");
    }
    public static int _scwprintf ( Addressable _Format, Object... x1) {
        var mh$ = _scwprintf$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scwprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$44._scwprintf_p_l$MH,"_scwprintf_p_l");
    }
    public static int _scwprintf_p_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _scwprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scwprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$44._scwprintf_p$MH,"_scwprintf_p");
    }
    public static int _scwprintf_p ( Addressable _Format, Object... x1) {
        var mh$ = _scwprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vswscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$45.__stdio_common_vswscanf$MH,"__stdio_common_vswscanf");
    }
    public static int __stdio_common_vswscanf ( long _Options,  Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vswscanf$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vswscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$45._vswscanf_l$MH,"_vswscanf_l");
    }
    public static int _vswscanf_l ( Addressable _Buffer,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vswscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vswscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$45.vswscanf$MH,"vswscanf");
    }
    public static int vswscanf ( Addressable _Buffer,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vswscanf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vswscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$45._vswscanf_s_l$MH,"_vswscanf_s_l");
    }
    public static int _vswscanf_s_l ( Addressable _Buffer,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vswscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vswscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$45.vswscanf_s$MH,"vswscanf_s");
    }
    public static int vswscanf_s ( Addressable _Buffer,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vswscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnwscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$45._vsnwscanf_l$MH,"_vsnwscanf_l");
    }
    public static int _vsnwscanf_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vsnwscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnwscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$46._vsnwscanf_s_l$MH,"_vsnwscanf_s_l");
    }
    public static int _vsnwscanf_s_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vsnwscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$46._swscanf_l$MH,"_swscanf_l");
    }
    public static int _swscanf_l ( Addressable _Buffer,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _swscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle swscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$46.swscanf$MH,"swscanf");
    }
    public static int swscanf ( Addressable _Buffer,  Addressable _Format, Object... x2) {
        var mh$ = swscanf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$46._swscanf_s_l$MH,"_swscanf_s_l");
    }
    public static int _swscanf_s_l ( Addressable _Buffer,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _swscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle swscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$46.swscanf_s$MH,"swscanf_s");
    }
    public static int swscanf_s ( Addressable _Buffer,  Addressable _Format, Object... x2) {
        var mh$ = swscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snwscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$46._snwscanf_l$MH,"_snwscanf_l");
    }
    public static int _snwscanf_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _snwscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snwscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$47._snwscanf$MH,"_snwscanf");
    }
    public static int _snwscanf ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = _snwscanf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snwscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$47._snwscanf_s_l$MH,"_snwscanf_s_l");
    }
    public static int _snwscanf_s_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _snwscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snwscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$47._snwscanf_s$MH,"_snwscanf_s");
    }
    public static int _snwscanf_s ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = _snwscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfLong fpos_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static MethodHandle _get_stream_buffer_pointers$MH() {
        return RuntimeHelper.requireNonNull(constants$47._get_stream_buffer_pointers$MH,"_get_stream_buffer_pointers");
    }
    public static int _get_stream_buffer_pointers ( Addressable _Stream,  Addressable _Base,  Addressable _Pointer,  Addressable _Count) {
        var mh$ = _get_stream_buffer_pointers$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Base, _Pointer, _Count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle clearerr_s$MH() {
        return RuntimeHelper.requireNonNull(constants$47.clearerr_s$MH,"clearerr_s");
    }
    public static int clearerr_s ( Addressable _Stream) {
        var mh$ = clearerr_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fopen_s$MH() {
        return RuntimeHelper.requireNonNull(constants$47.fopen_s$MH,"fopen_s");
    }
    public static int fopen_s ( Addressable _Stream,  Addressable _FileName,  Addressable _Mode) {
        var mh$ = fopen_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _FileName, _Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fread_s$MH() {
        return RuntimeHelper.requireNonNull(constants$48.fread_s$MH,"fread_s");
    }
    public static long fread_s ( Addressable _Buffer,  long _BufferSize,  long _ElementSize,  long _ElementCount,  Addressable _Stream) {
        var mh$ = fread_s$MH();
        try {
            return (long)mh$.invokeExact(_Buffer, _BufferSize, _ElementSize, _ElementCount, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle freopen_s$MH() {
        return RuntimeHelper.requireNonNull(constants$48.freopen_s$MH,"freopen_s");
    }
    public static int freopen_s ( Addressable _Stream,  Addressable _FileName,  Addressable _Mode,  Addressable _OldStream) {
        var mh$ = freopen_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _FileName, _Mode, _OldStream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gets_s$MH() {
        return RuntimeHelper.requireNonNull(constants$48.gets_s$MH,"gets_s");
    }
    public static MemoryAddress gets_s ( Addressable _Buffer,  long _Size) {
        var mh$ = gets_s$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Buffer, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tmpfile_s$MH() {
        return RuntimeHelper.requireNonNull(constants$48.tmpfile_s$MH,"tmpfile_s");
    }
    public static int tmpfile_s ( Addressable _Stream) {
        var mh$ = tmpfile_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tmpnam_s$MH() {
        return RuntimeHelper.requireNonNull(constants$48.tmpnam_s$MH,"tmpnam_s");
    }
    public static int tmpnam_s ( Addressable _Buffer,  long _Size) {
        var mh$ = tmpnam_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle clearerr$MH() {
        return RuntimeHelper.requireNonNull(constants$48.clearerr$MH,"clearerr");
    }
    public static void clearerr ( Addressable _Stream) {
        var mh$ = clearerr$MH();
        try {
            mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fclose$MH() {
        return RuntimeHelper.requireNonNull(constants$49.fclose$MH,"fclose");
    }
    public static int fclose ( Addressable _Stream) {
        var mh$ = fclose$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fcloseall$MH() {
        return RuntimeHelper.requireNonNull(constants$49._fcloseall$MH,"_fcloseall");
    }
    public static int _fcloseall () {
        var mh$ = _fcloseall$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fdopen$MH() {
        return RuntimeHelper.requireNonNull(constants$49._fdopen$MH,"_fdopen");
    }
    public static MemoryAddress _fdopen ( int _FileHandle,  Addressable _Mode) {
        var mh$ = _fdopen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_FileHandle, _Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle feof$MH() {
        return RuntimeHelper.requireNonNull(constants$49.feof$MH,"feof");
    }
    public static int feof ( Addressable _Stream) {
        var mh$ = feof$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ferror$MH() {
        return RuntimeHelper.requireNonNull(constants$49.ferror$MH,"ferror");
    }
    public static int ferror ( Addressable _Stream) {
        var mh$ = ferror$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fflush$MH() {
        return RuntimeHelper.requireNonNull(constants$49.fflush$MH,"fflush");
    }
    public static int fflush ( Addressable _Stream) {
        var mh$ = fflush$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgetc$MH() {
        return RuntimeHelper.requireNonNull(constants$50.fgetc$MH,"fgetc");
    }
    public static int fgetc ( Addressable _Stream) {
        var mh$ = fgetc$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fgetchar$MH() {
        return RuntimeHelper.requireNonNull(constants$50._fgetchar$MH,"_fgetchar");
    }
    public static int _fgetchar () {
        var mh$ = _fgetchar$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgetpos$MH() {
        return RuntimeHelper.requireNonNull(constants$50.fgetpos$MH,"fgetpos");
    }
    public static int fgetpos ( Addressable _Stream,  Addressable _Position) {
        var mh$ = fgetpos$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgets$MH() {
        return RuntimeHelper.requireNonNull(constants$50.fgets$MH,"fgets");
    }
    public static MemoryAddress fgets ( Addressable _Buffer,  int _MaxCount,  Addressable _Stream) {
        var mh$ = fgets$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Buffer, _MaxCount, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fileno$MH() {
        return RuntimeHelper.requireNonNull(constants$50._fileno$MH,"_fileno");
    }
    public static int _fileno ( Addressable _Stream) {
        var mh$ = _fileno$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _flushall$MH() {
        return RuntimeHelper.requireNonNull(constants$50._flushall$MH,"_flushall");
    }
    public static int _flushall () {
        var mh$ = _flushall$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fopen$MH() {
        return RuntimeHelper.requireNonNull(constants$51.fopen$MH,"fopen");
    }
    public static MemoryAddress fopen ( Addressable _FileName,  Addressable _Mode) {
        var mh$ = fopen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_FileName, _Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fputc$MH() {
        return RuntimeHelper.requireNonNull(constants$51.fputc$MH,"fputc");
    }
    public static int fputc ( int _Character,  Addressable _Stream) {
        var mh$ = fputc$MH();
        try {
            return (int)mh$.invokeExact(_Character, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fputchar$MH() {
        return RuntimeHelper.requireNonNull(constants$51._fputchar$MH,"_fputchar");
    }
    public static int _fputchar ( int _Character) {
        var mh$ = _fputchar$MH();
        try {
            return (int)mh$.invokeExact(_Character);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fputs$MH() {
        return RuntimeHelper.requireNonNull(constants$51.fputs$MH,"fputs");
    }
    public static int fputs ( Addressable _Buffer,  Addressable _Stream) {
        var mh$ = fputs$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fread$MH() {
        return RuntimeHelper.requireNonNull(constants$51.fread$MH,"fread");
    }
    public static long fread ( Addressable _Buffer,  long _ElementSize,  long _ElementCount,  Addressable _Stream) {
        var mh$ = fread$MH();
        try {
            return (long)mh$.invokeExact(_Buffer, _ElementSize, _ElementCount, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle freopen$MH() {
        return RuntimeHelper.requireNonNull(constants$51.freopen$MH,"freopen");
    }
    public static MemoryAddress freopen ( Addressable _FileName,  Addressable _Mode,  Addressable _Stream) {
        var mh$ = freopen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_FileName, _Mode, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fsopen$MH() {
        return RuntimeHelper.requireNonNull(constants$52._fsopen$MH,"_fsopen");
    }
    public static MemoryAddress _fsopen ( Addressable _FileName,  Addressable _Mode,  int _ShFlag) {
        var mh$ = _fsopen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_FileName, _Mode, _ShFlag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fsetpos$MH() {
        return RuntimeHelper.requireNonNull(constants$52.fsetpos$MH,"fsetpos");
    }
    public static int fsetpos ( Addressable _Stream,  Addressable _Position) {
        var mh$ = fsetpos$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fseek$MH() {
        return RuntimeHelper.requireNonNull(constants$52.fseek$MH,"fseek");
    }
    public static int fseek ( Addressable _Stream,  int _Offset,  int _Origin) {
        var mh$ = fseek$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Offset, _Origin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fseeki64$MH() {
        return RuntimeHelper.requireNonNull(constants$52._fseeki64$MH,"_fseeki64");
    }
    public static int _fseeki64 ( Addressable _Stream,  long _Offset,  int _Origin) {
        var mh$ = _fseeki64$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Offset, _Origin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ftell$MH() {
        return RuntimeHelper.requireNonNull(constants$52.ftell$MH,"ftell");
    }
    public static int ftell ( Addressable _Stream) {
        var mh$ = ftell$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ftelli64$MH() {
        return RuntimeHelper.requireNonNull(constants$52._ftelli64$MH,"_ftelli64");
    }
    public static long _ftelli64 ( Addressable _Stream) {
        var mh$ = _ftelli64$MH();
        try {
            return (long)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fwrite$MH() {
        return RuntimeHelper.requireNonNull(constants$53.fwrite$MH,"fwrite");
    }
    public static long fwrite ( Addressable _Buffer,  long _ElementSize,  long _ElementCount,  Addressable _Stream) {
        var mh$ = fwrite$MH();
        try {
            return (long)mh$.invokeExact(_Buffer, _ElementSize, _ElementCount, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getc$MH() {
        return RuntimeHelper.requireNonNull(constants$53.getc$MH,"getc");
    }
    public static int getc ( Addressable _Stream) {
        var mh$ = getc$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getchar$MH() {
        return RuntimeHelper.requireNonNull(constants$53.getchar$MH,"getchar");
    }
    public static int getchar () {
        var mh$ = getchar$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _getmaxstdio$MH() {
        return RuntimeHelper.requireNonNull(constants$53._getmaxstdio$MH,"_getmaxstdio");
    }
    public static int _getmaxstdio () {
        var mh$ = _getmaxstdio$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _getw$MH() {
        return RuntimeHelper.requireNonNull(constants$53._getw$MH,"_getw");
    }
    public static int _getw ( Addressable _Stream) {
        var mh$ = _getw$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle perror$MH() {
        return RuntimeHelper.requireNonNull(constants$53.perror$MH,"perror");
    }
    public static void perror ( Addressable _ErrorMessage) {
        var mh$ = perror$MH();
        try {
            mh$.invokeExact(_ErrorMessage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _pclose$MH() {
        return RuntimeHelper.requireNonNull(constants$54._pclose$MH,"_pclose");
    }
    public static int _pclose ( Addressable _Stream) {
        var mh$ = _pclose$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _popen$MH() {
        return RuntimeHelper.requireNonNull(constants$54._popen$MH,"_popen");
    }
    public static MemoryAddress _popen ( Addressable _Command,  Addressable _Mode) {
        var mh$ = _popen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Command, _Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putc$MH() {
        return RuntimeHelper.requireNonNull(constants$54.putc$MH,"putc");
    }
    public static int putc ( int _Character,  Addressable _Stream) {
        var mh$ = putc$MH();
        try {
            return (int)mh$.invokeExact(_Character, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putchar$MH() {
        return RuntimeHelper.requireNonNull(constants$54.putchar$MH,"putchar");
    }
    public static int putchar ( int _Character) {
        var mh$ = putchar$MH();
        try {
            return (int)mh$.invokeExact(_Character);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle puts$MH() {
        return RuntimeHelper.requireNonNull(constants$54.puts$MH,"puts");
    }
    public static int puts ( Addressable _Buffer) {
        var mh$ = puts$MH();
        try {
            return (int)mh$.invokeExact(_Buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _putw$MH() {
        return RuntimeHelper.requireNonNull(constants$54._putw$MH,"_putw");
    }
    public static int _putw ( int _Word,  Addressable _Stream) {
        var mh$ = _putw$MH();
        try {
            return (int)mh$.invokeExact(_Word, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle remove$MH() {
        return RuntimeHelper.requireNonNull(constants$55.remove$MH,"remove");
    }
    public static int remove ( Addressable _FileName) {
        var mh$ = remove$MH();
        try {
            return (int)mh$.invokeExact(_FileName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rename$MH() {
        return RuntimeHelper.requireNonNull(constants$55.rename$MH,"rename");
    }
    public static int rename ( Addressable _OldFileName,  Addressable _NewFileName) {
        var mh$ = rename$MH();
        try {
            return (int)mh$.invokeExact(_OldFileName, _NewFileName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _unlink$MH() {
        return RuntimeHelper.requireNonNull(constants$55._unlink$MH,"_unlink");
    }
    public static int _unlink ( Addressable _FileName) {
        var mh$ = _unlink$MH();
        try {
            return (int)mh$.invokeExact(_FileName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle unlink$MH() {
        return RuntimeHelper.requireNonNull(constants$55.unlink$MH,"unlink");
    }
    public static int unlink ( Addressable _FileName) {
        var mh$ = unlink$MH();
        try {
            return (int)mh$.invokeExact(_FileName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rewind$MH() {
        return RuntimeHelper.requireNonNull(constants$55.rewind$MH,"rewind");
    }
    public static void rewind ( Addressable _Stream) {
        var mh$ = rewind$MH();
        try {
            mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _rmtmp$MH() {
        return RuntimeHelper.requireNonNull(constants$55._rmtmp$MH,"_rmtmp");
    }
    public static int _rmtmp () {
        var mh$ = _rmtmp$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$56.setbuf$MH,"setbuf");
    }
    public static void setbuf ( Addressable _Stream,  Addressable _Buffer) {
        var mh$ = setbuf$MH();
        try {
            mh$.invokeExact(_Stream, _Buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _setmaxstdio$MH() {
        return RuntimeHelper.requireNonNull(constants$56._setmaxstdio$MH,"_setmaxstdio");
    }
    public static int _setmaxstdio ( int _Maximum) {
        var mh$ = _setmaxstdio$MH();
        try {
            return (int)mh$.invokeExact(_Maximum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setvbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$56.setvbuf$MH,"setvbuf");
    }
    public static int setvbuf ( Addressable _Stream,  Addressable _Buffer,  int _Mode,  long _Size) {
        var mh$ = setvbuf$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Buffer, _Mode, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _tempnam$MH() {
        return RuntimeHelper.requireNonNull(constants$56._tempnam$MH,"_tempnam");
    }
    public static MemoryAddress _tempnam ( Addressable _DirectoryName,  Addressable _FilePrefix) {
        var mh$ = _tempnam$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_DirectoryName, _FilePrefix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tmpfile$MH() {
        return RuntimeHelper.requireNonNull(constants$56.tmpfile$MH,"tmpfile");
    }
    public static MemoryAddress tmpfile () {
        var mh$ = tmpfile$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tmpnam$MH() {
        return RuntimeHelper.requireNonNull(constants$56.tmpnam$MH,"tmpnam");
    }
    public static MemoryAddress tmpnam ( Addressable _Buffer) {
        var mh$ = tmpnam$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ungetc$MH() {
        return RuntimeHelper.requireNonNull(constants$57.ungetc$MH,"ungetc");
    }
    public static int ungetc ( int _Character,  Addressable _Stream) {
        var mh$ = ungetc$MH();
        try {
            return (int)mh$.invokeExact(_Character, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lock_file$MH() {
        return RuntimeHelper.requireNonNull(constants$57._lock_file$MH,"_lock_file");
    }
    public static void _lock_file ( Addressable _Stream) {
        var mh$ = _lock_file$MH();
        try {
            mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _unlock_file$MH() {
        return RuntimeHelper.requireNonNull(constants$57._unlock_file$MH,"_unlock_file");
    }
    public static void _unlock_file ( Addressable _Stream) {
        var mh$ = _unlock_file$MH();
        try {
            mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fclose_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$57._fclose_nolock$MH,"_fclose_nolock");
    }
    public static int _fclose_nolock ( Addressable _Stream) {
        var mh$ = _fclose_nolock$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fflush_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$57._fflush_nolock$MH,"_fflush_nolock");
    }
    public static int _fflush_nolock ( Addressable _Stream) {
        var mh$ = _fflush_nolock$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fgetc_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$57._fgetc_nolock$MH,"_fgetc_nolock");
    }
    public static int _fgetc_nolock ( Addressable _Stream) {
        var mh$ = _fgetc_nolock$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fputc_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$58._fputc_nolock$MH,"_fputc_nolock");
    }
    public static int _fputc_nolock ( int _Character,  Addressable _Stream) {
        var mh$ = _fputc_nolock$MH();
        try {
            return (int)mh$.invokeExact(_Character, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fread_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$58._fread_nolock$MH,"_fread_nolock");
    }
    public static long _fread_nolock ( Addressable _Buffer,  long _ElementSize,  long _ElementCount,  Addressable _Stream) {
        var mh$ = _fread_nolock$MH();
        try {
            return (long)mh$.invokeExact(_Buffer, _ElementSize, _ElementCount, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fread_nolock_s$MH() {
        return RuntimeHelper.requireNonNull(constants$58._fread_nolock_s$MH,"_fread_nolock_s");
    }
    public static long _fread_nolock_s ( Addressable _Buffer,  long _BufferSize,  long _ElementSize,  long _ElementCount,  Addressable _Stream) {
        var mh$ = _fread_nolock_s$MH();
        try {
            return (long)mh$.invokeExact(_Buffer, _BufferSize, _ElementSize, _ElementCount, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fseek_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$58._fseek_nolock$MH,"_fseek_nolock");
    }
    public static int _fseek_nolock ( Addressable _Stream,  int _Offset,  int _Origin) {
        var mh$ = _fseek_nolock$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Offset, _Origin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fseeki64_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$58._fseeki64_nolock$MH,"_fseeki64_nolock");
    }
    public static int _fseeki64_nolock ( Addressable _Stream,  long _Offset,  int _Origin) {
        var mh$ = _fseeki64_nolock$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Offset, _Origin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ftell_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$58._ftell_nolock$MH,"_ftell_nolock");
    }
    public static int _ftell_nolock ( Addressable _Stream) {
        var mh$ = _ftell_nolock$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ftelli64_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$59._ftelli64_nolock$MH,"_ftelli64_nolock");
    }
    public static long _ftelli64_nolock ( Addressable _Stream) {
        var mh$ = _ftelli64_nolock$MH();
        try {
            return (long)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fwrite_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$59._fwrite_nolock$MH,"_fwrite_nolock");
    }
    public static long _fwrite_nolock ( Addressable _Buffer,  long _ElementSize,  long _ElementCount,  Addressable _Stream) {
        var mh$ = _fwrite_nolock$MH();
        try {
            return (long)mh$.invokeExact(_Buffer, _ElementSize, _ElementCount, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _getc_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$59._getc_nolock$MH,"_getc_nolock");
    }
    public static int _getc_nolock ( Addressable _Stream) {
        var mh$ = _getc_nolock$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _putc_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$59._putc_nolock$MH,"_putc_nolock");
    }
    public static int _putc_nolock ( int _Character,  Addressable _Stream) {
        var mh$ = _putc_nolock$MH();
        try {
            return (int)mh$.invokeExact(_Character, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ungetc_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$59._ungetc_nolock$MH,"_ungetc_nolock");
    }
    public static int _ungetc_nolock ( int _Character,  Addressable _Stream) {
        var mh$ = _ungetc_nolock$MH();
        try {
            return (int)mh$.invokeExact(_Character, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__commode$MH() {
        return RuntimeHelper.requireNonNull(constants$59.__p__commode$MH,"__p__commode");
    }
    public static MemoryAddress __p__commode () {
        var mh$ = __p__commode$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vfprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$60.__stdio_common_vfprintf$MH,"__stdio_common_vfprintf");
    }
    public static int __stdio_common_vfprintf ( long _Options,  Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vfprintf$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vfprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$60.__stdio_common_vfprintf_s$MH,"__stdio_common_vfprintf_s");
    }
    public static int __stdio_common_vfprintf_s ( long _Options,  Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vfprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vfprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$60.__stdio_common_vfprintf_p$MH,"__stdio_common_vfprintf_p");
    }
    public static int __stdio_common_vfprintf_p ( long _Options,  Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vfprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$60._vfprintf_l$MH,"_vfprintf_l");
    }
    public static int _vfprintf_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vfprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$60.vfprintf$MH,"vfprintf");
    }
    public static int vfprintf ( Addressable _Stream,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vfprintf$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$60._vfprintf_s_l$MH,"_vfprintf_s_l");
    }
    public static int _vfprintf_s_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vfprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$61.vfprintf_s$MH,"vfprintf_s");
    }
    public static int vfprintf_s ( Addressable _Stream,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vfprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$61._vfprintf_p_l$MH,"_vfprintf_p_l");
    }
    public static int _vfprintf_p_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vfprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$61._vfprintf_p$MH,"_vfprintf_p");
    }
    public static int _vfprintf_p ( Addressable _Stream,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vfprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$61._vprintf_l$MH,"_vprintf_l");
    }
    public static int _vprintf_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$61.vprintf$MH,"vprintf");
    }
    public static int vprintf ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = vprintf$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$61._vprintf_s_l$MH,"_vprintf_s_l");
    }
    public static int _vprintf_s_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$62.vprintf_s$MH,"vprintf_s");
    }
    public static int vprintf_s ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = vprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$62._vprintf_p_l$MH,"_vprintf_p_l");
    }
    public static int _vprintf_p_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$62._vprintf_p$MH,"_vprintf_p");
    }
    public static int _vprintf_p ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$62._fprintf_l$MH,"_fprintf_l");
    }
    public static int _fprintf_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _fprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$62.fprintf$MH,"fprintf");
    }
    public static int fprintf ( Addressable _Stream,  Addressable _Format, Object... x2) {
        var mh$ = fprintf$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_printf_count_output$MH() {
        return RuntimeHelper.requireNonNull(constants$62._set_printf_count_output$MH,"_set_printf_count_output");
    }
    public static int _set_printf_count_output ( int _Value) {
        var mh$ = _set_printf_count_output$MH();
        try {
            return (int)mh$.invokeExact(_Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_printf_count_output$MH() {
        return RuntimeHelper.requireNonNull(constants$63._get_printf_count_output$MH,"_get_printf_count_output");
    }
    public static int _get_printf_count_output () {
        var mh$ = _get_printf_count_output$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$63._fprintf_s_l$MH,"_fprintf_s_l");
    }
    public static int _fprintf_s_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _fprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$63.fprintf_s$MH,"fprintf_s");
    }
    public static int fprintf_s ( Addressable _Stream,  Addressable _Format, Object... x2) {
        var mh$ = fprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$63._fprintf_p_l$MH,"_fprintf_p_l");
    }
    public static int _fprintf_p_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _fprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$63._fprintf_p$MH,"_fprintf_p");
    }
    public static int _fprintf_p ( Addressable _Stream,  Addressable _Format, Object... x2) {
        var mh$ = _fprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _printf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$63._printf_l$MH,"_printf_l");
    }
    public static int _printf_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _printf_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle printf$MH() {
        return RuntimeHelper.requireNonNull(constants$64.printf$MH,"printf");
    }
    public static int printf ( Addressable _Format, Object... x1) {
        var mh$ = printf$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _printf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$64._printf_s_l$MH,"_printf_s_l");
    }
    public static int _printf_s_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _printf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle printf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$64.printf_s$MH,"printf_s");
    }
    public static int printf_s ( Addressable _Format, Object... x1) {
        var mh$ = printf_s$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _printf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$64._printf_p_l$MH,"_printf_p_l");
    }
    public static int _printf_p_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _printf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _printf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$64._printf_p$MH,"_printf_p");
    }
    public static int _printf_p ( Addressable _Format, Object... x1) {
        var mh$ = _printf_p$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vfscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$64.__stdio_common_vfscanf$MH,"__stdio_common_vfscanf");
    }
    public static int __stdio_common_vfscanf ( long _Options,  Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _Arglist) {
        var mh$ = __stdio_common_vfscanf$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Stream, _Format, _Locale, _Arglist);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$65._vfscanf_l$MH,"_vfscanf_l");
    }
    public static int _vfscanf_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vfscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$65.vfscanf$MH,"vfscanf");
    }
    public static int vfscanf ( Addressable _Stream,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vfscanf$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$65._vfscanf_s_l$MH,"_vfscanf_s_l");
    }
    public static int _vfscanf_s_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vfscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$65.vfscanf_s$MH,"vfscanf_s");
    }
    public static int vfscanf_s ( Addressable _Stream,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vfscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$65._vscanf_l$MH,"_vscanf_l");
    }
    public static int _vscanf_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$65.vscanf$MH,"vscanf");
    }
    public static int vscanf ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = vscanf$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$66._vscanf_s_l$MH,"_vscanf_s_l");
    }
    public static int _vscanf_s_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$66.vscanf_s$MH,"vscanf_s");
    }
    public static int vscanf_s ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = vscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$66._fscanf_l$MH,"_fscanf_l");
    }
    public static int _fscanf_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _fscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$66.fscanf$MH,"fscanf");
    }
    public static int fscanf ( Addressable _Stream,  Addressable _Format, Object... x2) {
        var mh$ = fscanf$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$66._fscanf_s_l$MH,"_fscanf_s_l");
    }
    public static int _fscanf_s_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _fscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$66.fscanf_s$MH,"fscanf_s");
    }
    public static int fscanf_s ( Addressable _Stream,  Addressable _Format, Object... x2) {
        var mh$ = fscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$67._scanf_l$MH,"_scanf_l");
    }
    public static int _scanf_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _scanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle scanf$MH() {
        return RuntimeHelper.requireNonNull(constants$67.scanf$MH,"scanf");
    }
    public static int scanf ( Addressable _Format, Object... x1) {
        var mh$ = scanf$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$67._scanf_s_l$MH,"_scanf_s_l");
    }
    public static int _scanf_s_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _scanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle scanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$67.scanf_s$MH,"scanf_s");
    }
    public static int scanf_s ( Addressable _Format, Object... x1) {
        var mh$ = scanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vsprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$67.__stdio_common_vsprintf$MH,"__stdio_common_vsprintf");
    }
    public static int __stdio_common_vsprintf ( long _Options,  Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vsprintf$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vsprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$67.__stdio_common_vsprintf_s$MH,"__stdio_common_vsprintf_s");
    }
    public static int __stdio_common_vsprintf_s ( long _Options,  Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vsprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vsnprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$68.__stdio_common_vsnprintf_s$MH,"__stdio_common_vsnprintf_s");
    }
    public static int __stdio_common_vsnprintf_s ( long _Options,  Addressable _Buffer,  long _BufferCount,  long _MaxCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vsnprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vsprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$68.__stdio_common_vsprintf_p$MH,"__stdio_common_vsprintf_p");
    }
    public static int __stdio_common_vsprintf_p ( long _Options,  Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vsprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$68._vsnprintf_l$MH,"_vsnprintf_l");
    }
    public static int _vsnprintf_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vsnprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$68._vsnprintf$MH,"_vsnprintf");
    }
    public static int _vsnprintf ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vsnprintf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vsnprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$68.vsnprintf$MH,"vsnprintf");
    }
    public static int vsnprintf ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vsnprintf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$68._vsprintf_l$MH,"_vsprintf_l");
    }
    public static int _vsprintf_l ( Addressable _Buffer,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vsprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vsprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$69.vsprintf$MH,"vsprintf");
    }
    public static int vsprintf ( Addressable _Buffer,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vsprintf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$69._vsprintf_s_l$MH,"_vsprintf_s_l");
    }
    public static int _vsprintf_s_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vsprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vsprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$69.vsprintf_s$MH,"vsprintf_s");
    }
    public static int vsprintf_s ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vsprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$69._vsprintf_p_l$MH,"_vsprintf_p_l");
    }
    public static int _vsprintf_p_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vsprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$69._vsprintf_p$MH,"_vsprintf_p");
    }
    public static int _vsprintf_p ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vsprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$69._vsnprintf_s_l$MH,"_vsnprintf_s_l");
    }
    public static int _vsnprintf_s_l ( Addressable _Buffer,  long _BufferCount,  long _MaxCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vsnprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$70._vsnprintf_s$MH,"_vsnprintf_s");
    }
    public static int _vsnprintf_s ( Addressable _Buffer,  long _BufferCount,  long _MaxCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vsnprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _MaxCount, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vsnprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$70.vsnprintf_s$MH,"vsnprintf_s");
    }
    public static int vsnprintf_s ( Addressable _Buffer,  long _BufferCount,  long _MaxCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vsnprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _MaxCount, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$70._vscprintf_l$MH,"_vscprintf_l");
    }
    public static int _vscprintf_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vscprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$70._vscprintf$MH,"_vscprintf");
    }
    public static int _vscprintf ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vscprintf$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$70._vscprintf_p_l$MH,"_vscprintf_p_l");
    }
    public static int _vscprintf_p_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vscprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$70._vscprintf_p$MH,"_vscprintf_p");
    }
    public static int _vscprintf_p ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vscprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnprintf_c_l$MH() {
        return RuntimeHelper.requireNonNull(constants$71._vsnprintf_c_l$MH,"_vsnprintf_c_l");
    }
    public static int _vsnprintf_c_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vsnprintf_c_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnprintf_c$MH() {
        return RuntimeHelper.requireNonNull(constants$71._vsnprintf_c$MH,"_vsnprintf_c");
    }
    public static int _vsnprintf_c ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vsnprintf_c$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$71._sprintf_l$MH,"_sprintf_l");
    }
    public static int _sprintf_l ( Addressable _Buffer,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _sprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$71.sprintf$MH,"sprintf");
    }
    public static int sprintf ( Addressable _Buffer,  Addressable _Format, Object... x2) {
        var mh$ = sprintf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$71._sprintf_s_l$MH,"_sprintf_s_l");
    }
    public static int _sprintf_s_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _sprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$71.sprintf_s$MH,"sprintf_s");
    }
    public static int sprintf_s ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = sprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$72._sprintf_p_l$MH,"_sprintf_p_l");
    }
    public static int _sprintf_p_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _sprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$72._sprintf_p$MH,"_sprintf_p");
    }
    public static int _sprintf_p ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = _sprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$72._snprintf_l$MH,"_snprintf_l");
    }
    public static int _snprintf_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _snprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle snprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$72.snprintf$MH,"snprintf");
    }
    public static int snprintf ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = snprintf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$72._snprintf$MH,"_snprintf");
    }
    public static int _snprintf ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = _snprintf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snprintf_c_l$MH() {
        return RuntimeHelper.requireNonNull(constants$72._snprintf_c_l$MH,"_snprintf_c_l");
    }
    public static int _snprintf_c_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _snprintf_c_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snprintf_c$MH() {
        return RuntimeHelper.requireNonNull(constants$73._snprintf_c$MH,"_snprintf_c");
    }
    public static int _snprintf_c ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = _snprintf_c$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$73._snprintf_s_l$MH,"_snprintf_s_l");
    }
    public static int _snprintf_s_l ( Addressable _Buffer,  long _BufferCount,  long _MaxCount,  Addressable _Format,  Addressable _Locale, Object... x5) {
        var mh$ = _snprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _MaxCount, _Format, _Locale, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$73._snprintf_s$MH,"_snprintf_s");
    }
    public static int _snprintf_s ( Addressable _Buffer,  long _BufferCount,  long _MaxCount,  Addressable _Format, Object... x4) {
        var mh$ = _snprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _MaxCount, _Format, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$73._scprintf_l$MH,"_scprintf_l");
    }
    public static int _scprintf_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _scprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$73._scprintf$MH,"_scprintf");
    }
    public static int _scprintf ( Addressable _Format, Object... x1) {
        var mh$ = _scprintf$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$73._scprintf_p_l$MH,"_scprintf_p_l");
    }
    public static int _scprintf_p_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _scprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$74._scprintf_p$MH,"_scprintf_p");
    }
    public static int _scprintf_p ( Addressable _Format, Object... x1) {
        var mh$ = _scprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vsscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$74.__stdio_common_vsscanf$MH,"__stdio_common_vsscanf");
    }
    public static int __stdio_common_vsscanf ( long _Options,  Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vsscanf$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$74._vsscanf_l$MH,"_vsscanf_l");
    }
    public static int _vsscanf_l ( Addressable _Buffer,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vsscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vsscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$74.vsscanf$MH,"vsscanf");
    }
    public static int vsscanf ( Addressable _Buffer,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vsscanf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$74._vsscanf_s_l$MH,"_vsscanf_s_l");
    }
    public static int _vsscanf_s_l ( Addressable _Buffer,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vsscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vsscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$74.vsscanf_s$MH,"vsscanf_s");
    }
    public static int vsscanf_s ( Addressable _Buffer,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vsscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$75._sscanf_l$MH,"_sscanf_l");
    }
    public static int _sscanf_l ( Addressable _Buffer,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _sscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$75.sscanf$MH,"sscanf");
    }
    public static int sscanf ( Addressable _Buffer,  Addressable _Format, Object... x2) {
        var mh$ = sscanf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$75._sscanf_s_l$MH,"_sscanf_s_l");
    }
    public static int _sscanf_s_l ( Addressable _Buffer,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _sscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$75.sscanf_s$MH,"sscanf_s");
    }
    public static int sscanf_s ( Addressable _Buffer,  Addressable _Format, Object... x2) {
        var mh$ = sscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$75._snscanf_l$MH,"_snscanf_l");
    }
    public static int _snscanf_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _snscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$75._snscanf$MH,"_snscanf");
    }
    public static int _snscanf ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = _snscanf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$76._snscanf_s_l$MH,"_snscanf_s_l");
    }
    public static int _snscanf_s_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _snscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$76._snscanf_s$MH,"_snscanf_s");
    }
    public static int _snscanf_s ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = _snscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tempnam$MH() {
        return RuntimeHelper.requireNonNull(constants$76.tempnam$MH,"tempnam");
    }
    public static MemoryAddress tempnam ( Addressable _Directory,  Addressable _FilePrefix) {
        var mh$ = tempnam$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Directory, _FilePrefix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fcloseall$MH() {
        return RuntimeHelper.requireNonNull(constants$76.fcloseall$MH,"fcloseall");
    }
    public static int fcloseall () {
        var mh$ = fcloseall$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fdopen$MH() {
        return RuntimeHelper.requireNonNull(constants$76.fdopen$MH,"fdopen");
    }
    public static MemoryAddress fdopen ( int _FileHandle,  Addressable _Format) {
        var mh$ = fdopen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_FileHandle, _Format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgetchar$MH() {
        return RuntimeHelper.requireNonNull(constants$76.fgetchar$MH,"fgetchar");
    }
    public static int fgetchar () {
        var mh$ = fgetchar$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fileno$MH() {
        return RuntimeHelper.requireNonNull(constants$77.fileno$MH,"fileno");
    }
    public static int fileno ( Addressable _Stream) {
        var mh$ = fileno$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle flushall$MH() {
        return RuntimeHelper.requireNonNull(constants$77.flushall$MH,"flushall");
    }
    public static int flushall () {
        var mh$ = flushall$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fputchar$MH() {
        return RuntimeHelper.requireNonNull(constants$77.fputchar$MH,"fputchar");
    }
    public static int fputchar ( int _Ch) {
        var mh$ = fputchar$MH();
        try {
            return (int)mh$.invokeExact(_Ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getw$MH() {
        return RuntimeHelper.requireNonNull(constants$77.getw$MH,"getw");
    }
    public static int getw ( Addressable _Stream) {
        var mh$ = getw$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putw$MH() {
        return RuntimeHelper.requireNonNull(constants$77.putw$MH,"putw");
    }
    public static int putw ( int _Ch,  Addressable _Stream) {
        var mh$ = putw$MH();
        try {
            return (int)mh$.invokeExact(_Ch, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rmtmp$MH() {
        return RuntimeHelper.requireNonNull(constants$77.rmtmp$MH,"rmtmp");
    }
    public static int rmtmp () {
        var mh$ = rmtmp$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _calloc_base$MH() {
        return RuntimeHelper.requireNonNull(constants$78._calloc_base$MH,"_calloc_base");
    }
    public static MemoryAddress _calloc_base ( long _Count,  long _Size) {
        var mh$ = _calloc_base$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Count, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle calloc$MH() {
        return RuntimeHelper.requireNonNull(constants$78.calloc$MH,"calloc");
    }
    public static MemoryAddress calloc ( long _Count,  long _Size) {
        var mh$ = calloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Count, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _callnewh$MH() {
        return RuntimeHelper.requireNonNull(constants$78._callnewh$MH,"_callnewh");
    }
    public static int _callnewh ( long _Size) {
        var mh$ = _callnewh$MH();
        try {
            return (int)mh$.invokeExact(_Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _expand$MH() {
        return RuntimeHelper.requireNonNull(constants$78._expand$MH,"_expand");
    }
    public static MemoryAddress _expand ( Addressable _Block,  long _Size) {
        var mh$ = _expand$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Block, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _free_base$MH() {
        return RuntimeHelper.requireNonNull(constants$78._free_base$MH,"_free_base");
    }
    public static void _free_base ( Addressable _Block) {
        var mh$ = _free_base$MH();
        try {
            mh$.invokeExact(_Block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle free$MH() {
        return RuntimeHelper.requireNonNull(constants$78.free$MH,"free");
    }
    public static void free ( Addressable _Block) {
        var mh$ = free$MH();
        try {
            mh$.invokeExact(_Block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _malloc_base$MH() {
        return RuntimeHelper.requireNonNull(constants$79._malloc_base$MH,"_malloc_base");
    }
    public static MemoryAddress _malloc_base ( long _Size) {
        var mh$ = _malloc_base$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$79.malloc$MH,"malloc");
    }
    public static MemoryAddress malloc ( long _Size) {
        var mh$ = malloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _msize_base$MH() {
        return RuntimeHelper.requireNonNull(constants$79._msize_base$MH,"_msize_base");
    }
    public static long _msize_base ( Addressable _Block) {
        var mh$ = _msize_base$MH();
        try {
            return (long)mh$.invokeExact(_Block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _msize$MH() {
        return RuntimeHelper.requireNonNull(constants$79._msize$MH,"_msize");
    }
    public static long _msize ( Addressable _Block) {
        var mh$ = _msize$MH();
        try {
            return (long)mh$.invokeExact(_Block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _realloc_base$MH() {
        return RuntimeHelper.requireNonNull(constants$79._realloc_base$MH,"_realloc_base");
    }
    public static MemoryAddress _realloc_base ( Addressable _Block,  long _Size) {
        var mh$ = _realloc_base$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Block, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle realloc$MH() {
        return RuntimeHelper.requireNonNull(constants$79.realloc$MH,"realloc");
    }
    public static MemoryAddress realloc ( Addressable _Block,  long _Size) {
        var mh$ = realloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Block, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _recalloc_base$MH() {
        return RuntimeHelper.requireNonNull(constants$80._recalloc_base$MH,"_recalloc_base");
    }
    public static MemoryAddress _recalloc_base ( Addressable _Block,  long _Count,  long _Size) {
        var mh$ = _recalloc_base$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Block, _Count, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _recalloc$MH() {
        return RuntimeHelper.requireNonNull(constants$80._recalloc$MH,"_recalloc");
    }
    public static MemoryAddress _recalloc ( Addressable _Block,  long _Count,  long _Size) {
        var mh$ = _recalloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Block, _Count, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_free$MH() {
        return RuntimeHelper.requireNonNull(constants$80._aligned_free$MH,"_aligned_free");
    }
    public static void _aligned_free ( Addressable _Block) {
        var mh$ = _aligned_free$MH();
        try {
            mh$.invokeExact(_Block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$80._aligned_malloc$MH,"_aligned_malloc");
    }
    public static MemoryAddress _aligned_malloc ( long _Size,  long _Alignment) {
        var mh$ = _aligned_malloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Size, _Alignment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_offset_malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$80._aligned_offset_malloc$MH,"_aligned_offset_malloc");
    }
    public static MemoryAddress _aligned_offset_malloc ( long _Size,  long _Alignment,  long _Offset) {
        var mh$ = _aligned_offset_malloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Size, _Alignment, _Offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_msize$MH() {
        return RuntimeHelper.requireNonNull(constants$80._aligned_msize$MH,"_aligned_msize");
    }
    public static long _aligned_msize ( Addressable _Block,  long _Alignment,  long _Offset) {
        var mh$ = _aligned_msize$MH();
        try {
            return (long)mh$.invokeExact(_Block, _Alignment, _Offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_offset_realloc$MH() {
        return RuntimeHelper.requireNonNull(constants$81._aligned_offset_realloc$MH,"_aligned_offset_realloc");
    }
    public static MemoryAddress _aligned_offset_realloc ( Addressable _Block,  long _Size,  long _Alignment,  long _Offset) {
        var mh$ = _aligned_offset_realloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Block, _Size, _Alignment, _Offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_offset_recalloc$MH() {
        return RuntimeHelper.requireNonNull(constants$81._aligned_offset_recalloc$MH,"_aligned_offset_recalloc");
    }
    public static MemoryAddress _aligned_offset_recalloc ( Addressable _Block,  long _Count,  long _Size,  long _Alignment,  long _Offset) {
        var mh$ = _aligned_offset_recalloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Block, _Count, _Size, _Alignment, _Offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_realloc$MH() {
        return RuntimeHelper.requireNonNull(constants$81._aligned_realloc$MH,"_aligned_realloc");
    }
    public static MemoryAddress _aligned_realloc ( Addressable _Block,  long _Size,  long _Alignment) {
        var mh$ = _aligned_realloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Block, _Size, _Alignment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_recalloc$MH() {
        return RuntimeHelper.requireNonNull(constants$81._aligned_recalloc$MH,"_aligned_recalloc");
    }
    public static MemoryAddress _aligned_recalloc ( Addressable _Block,  long _Count,  long _Size,  long _Alignment) {
        var mh$ = _aligned_recalloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Block, _Count, _Size, _Alignment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfLong ptrdiff_t$0 = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfDouble max_align_t = Constants$root.C_DOUBLE$LAYOUT;
    public static MethodHandle bsearch_s$MH() {
        return RuntimeHelper.requireNonNull(constants$82.bsearch_s$MH,"bsearch_s");
    }
    public static MemoryAddress bsearch_s ( Addressable _Key,  Addressable _Base,  long _NumOfElements,  long _SizeOfElements,  Addressable _CompareFunction,  Addressable _Context) {
        var mh$ = bsearch_s$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction, _Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle qsort_s$MH() {
        return RuntimeHelper.requireNonNull(constants$82.qsort_s$MH,"qsort_s");
    }
    public static void qsort_s ( Addressable _Base,  long _NumOfElements,  long _SizeOfElements,  Addressable _CompareFunction,  Addressable _Context) {
        var mh$ = qsort_s$MH();
        try {
            mh$.invokeExact(_Base, _NumOfElements, _SizeOfElements, _CompareFunction, _Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle bsearch$MH() {
        return RuntimeHelper.requireNonNull(constants$82.bsearch$MH,"bsearch");
    }
    public static MemoryAddress bsearch ( Addressable _Key,  Addressable _Base,  long _NumOfElements,  long _SizeOfElements,  Addressable _CompareFunction) {
        var mh$ = bsearch$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle qsort$MH() {
        return RuntimeHelper.requireNonNull(constants$82.qsort$MH,"qsort");
    }
    public static void qsort ( Addressable _Base,  long _NumOfElements,  long _SizeOfElements,  Addressable _CompareFunction) {
        var mh$ = qsort$MH();
        try {
            mh$.invokeExact(_Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lfind_s$MH() {
        return RuntimeHelper.requireNonNull(constants$83._lfind_s$MH,"_lfind_s");
    }
    public static MemoryAddress _lfind_s ( Addressable _Key,  Addressable _Base,  Addressable _NumOfElements,  long _SizeOfElements,  Addressable _CompareFunction,  Addressable _Context) {
        var mh$ = _lfind_s$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction, _Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lfind$MH() {
        return RuntimeHelper.requireNonNull(constants$83._lfind$MH,"_lfind");
    }
    public static MemoryAddress _lfind ( Addressable _Key,  Addressable _Base,  Addressable _NumOfElements,  int _SizeOfElements,  Addressable _CompareFunction) {
        var mh$ = _lfind$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lsearch_s$MH() {
        return RuntimeHelper.requireNonNull(constants$83._lsearch_s$MH,"_lsearch_s");
    }
    public static MemoryAddress _lsearch_s ( Addressable _Key,  Addressable _Base,  Addressable _NumOfElements,  long _SizeOfElements,  Addressable _CompareFunction,  Addressable _Context) {
        var mh$ = _lsearch_s$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction, _Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lsearch$MH() {
        return RuntimeHelper.requireNonNull(constants$83._lsearch$MH,"_lsearch");
    }
    public static MemoryAddress _lsearch ( Addressable _Key,  Addressable _Base,  Addressable _NumOfElements,  int _SizeOfElements,  Addressable _CompareFunction) {
        var mh$ = _lsearch$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lfind$MH() {
        return RuntimeHelper.requireNonNull(constants$83.lfind$MH,"lfind");
    }
    public static MemoryAddress lfind ( Addressable _Key,  Addressable _Base,  Addressable _NumOfElements,  int _SizeOfElements,  Addressable _CompareFunction) {
        var mh$ = lfind$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lsearch$MH() {
        return RuntimeHelper.requireNonNull(constants$83.lsearch$MH,"lsearch");
    }
    public static MemoryAddress lsearch ( Addressable _Key,  Addressable _Base,  Addressable _NumOfElements,  int _SizeOfElements,  Addressable _CompareFunction) {
        var mh$ = lsearch$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _itow_s$MH() {
        return RuntimeHelper.requireNonNull(constants$84._itow_s$MH,"_itow_s");
    }
    public static int _itow_s ( int _Value,  Addressable _Buffer,  long _BufferCount,  int _Radix) {
        var mh$ = _itow_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _itow$MH() {
        return RuntimeHelper.requireNonNull(constants$84._itow$MH,"_itow");
    }
    public static MemoryAddress _itow ( int _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = _itow$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ltow_s$MH() {
        return RuntimeHelper.requireNonNull(constants$84._ltow_s$MH,"_ltow_s");
    }
    public static int _ltow_s ( int _Value,  Addressable _Buffer,  long _BufferCount,  int _Radix) {
        var mh$ = _ltow_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ltow$MH() {
        return RuntimeHelper.requireNonNull(constants$84._ltow$MH,"_ltow");
    }
    public static MemoryAddress _ltow ( int _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = _ltow$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ultow_s$MH() {
        return RuntimeHelper.requireNonNull(constants$84._ultow_s$MH,"_ultow_s");
    }
    public static int _ultow_s ( int _Value,  Addressable _Buffer,  long _BufferCount,  int _Radix) {
        var mh$ = _ultow_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ultow$MH() {
        return RuntimeHelper.requireNonNull(constants$84._ultow$MH,"_ultow");
    }
    public static MemoryAddress _ultow ( int _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = _ultow$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstod$MH() {
        return RuntimeHelper.requireNonNull(constants$85.wcstod$MH,"wcstod");
    }
    public static double wcstod ( Addressable _String,  Addressable _EndPtr) {
        var mh$ = wcstod$MH();
        try {
            return (double)mh$.invokeExact(_String, _EndPtr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstod_l$MH() {
        return RuntimeHelper.requireNonNull(constants$85._wcstod_l$MH,"_wcstod_l");
    }
    public static double _wcstod_l ( Addressable _String,  Addressable _EndPtr,  Addressable _Locale) {
        var mh$ = _wcstod_l$MH();
        try {
            return (double)mh$.invokeExact(_String, _EndPtr, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstol$MH() {
        return RuntimeHelper.requireNonNull(constants$85.wcstol$MH,"wcstol");
    }
    public static int wcstol ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = wcstol$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstol_l$MH() {
        return RuntimeHelper.requireNonNull(constants$85._wcstol_l$MH,"_wcstol_l");
    }
    public static int _wcstol_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = _wcstol_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstoll$MH() {
        return RuntimeHelper.requireNonNull(constants$85.wcstoll$MH,"wcstoll");
    }
    public static long wcstoll ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = wcstoll$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$85._wcstoll_l$MH,"_wcstoll_l");
    }
    public static long _wcstoll_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = _wcstoll_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstoul$MH() {
        return RuntimeHelper.requireNonNull(constants$86.wcstoul$MH,"wcstoul");
    }
    public static int wcstoul ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = wcstoul$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoul_l$MH() {
        return RuntimeHelper.requireNonNull(constants$86._wcstoul_l$MH,"_wcstoul_l");
    }
    public static int _wcstoul_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = _wcstoul_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstoull$MH() {
        return RuntimeHelper.requireNonNull(constants$86.wcstoull$MH,"wcstoull");
    }
    public static long wcstoull ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = wcstoull$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoull_l$MH() {
        return RuntimeHelper.requireNonNull(constants$86._wcstoull_l$MH,"_wcstoull_l");
    }
    public static long _wcstoull_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = _wcstoull_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstof$MH() {
        return RuntimeHelper.requireNonNull(constants$86.wcstof$MH,"wcstof");
    }
    public static float wcstof ( Addressable _String,  Addressable _EndPtr) {
        var mh$ = wcstof$MH();
        try {
            return (float)mh$.invokeExact(_String, _EndPtr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstof_l$MH() {
        return RuntimeHelper.requireNonNull(constants$86._wcstof_l$MH,"_wcstof_l");
    }
    public static float _wcstof_l ( Addressable _String,  Addressable _EndPtr,  Addressable _Locale) {
        var mh$ = _wcstof_l$MH();
        try {
            return (float)mh$.invokeExact(_String, _EndPtr, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtof$MH() {
        return RuntimeHelper.requireNonNull(constants$87._wtof$MH,"_wtof");
    }
    public static double _wtof ( Addressable _String) {
        var mh$ = _wtof$MH();
        try {
            return (double)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtof_l$MH() {
        return RuntimeHelper.requireNonNull(constants$87._wtof_l$MH,"_wtof_l");
    }
    public static double _wtof_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = _wtof_l$MH();
        try {
            return (double)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoi$MH() {
        return RuntimeHelper.requireNonNull(constants$87._wtoi$MH,"_wtoi");
    }
    public static int _wtoi ( Addressable _String) {
        var mh$ = _wtoi$MH();
        try {
            return (int)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoi_l$MH() {
        return RuntimeHelper.requireNonNull(constants$87._wtoi_l$MH,"_wtoi_l");
    }
    public static int _wtoi_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = _wtoi_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtol$MH() {
        return RuntimeHelper.requireNonNull(constants$87._wtol$MH,"_wtol");
    }
    public static int _wtol ( Addressable _String) {
        var mh$ = _wtol$MH();
        try {
            return (int)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtol_l$MH() {
        return RuntimeHelper.requireNonNull(constants$87._wtol_l$MH,"_wtol_l");
    }
    public static int _wtol_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = _wtol_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoll$MH() {
        return RuntimeHelper.requireNonNull(constants$88._wtoll$MH,"_wtoll");
    }
    public static long _wtoll ( Addressable _String) {
        var mh$ = _wtoll$MH();
        try {
            return (long)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$88._wtoll_l$MH,"_wtoll_l");
    }
    public static long _wtoll_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = _wtoll_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _i64tow_s$MH() {
        return RuntimeHelper.requireNonNull(constants$88._i64tow_s$MH,"_i64tow_s");
    }
    public static int _i64tow_s ( long _Value,  Addressable _Buffer,  long _BufferCount,  int _Radix) {
        var mh$ = _i64tow_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _i64tow$MH() {
        return RuntimeHelper.requireNonNull(constants$88._i64tow$MH,"_i64tow");
    }
    public static MemoryAddress _i64tow ( long _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = _i64tow$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ui64tow_s$MH() {
        return RuntimeHelper.requireNonNull(constants$88._ui64tow_s$MH,"_ui64tow_s");
    }
    public static int _ui64tow_s ( long _Value,  Addressable _Buffer,  long _BufferCount,  int _Radix) {
        var mh$ = _ui64tow_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ui64tow$MH() {
        return RuntimeHelper.requireNonNull(constants$88._ui64tow$MH,"_ui64tow");
    }
    public static MemoryAddress _ui64tow ( long _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = _ui64tow$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoi64$MH() {
        return RuntimeHelper.requireNonNull(constants$89._wtoi64$MH,"_wtoi64");
    }
    public static long _wtoi64 ( Addressable _String) {
        var mh$ = _wtoi64$MH();
        try {
            return (long)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoi64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$89._wtoi64_l$MH,"_wtoi64_l");
    }
    public static long _wtoi64_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = _wtoi64_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoi64$MH() {
        return RuntimeHelper.requireNonNull(constants$89._wcstoi64$MH,"_wcstoi64");
    }
    public static long _wcstoi64 ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = _wcstoi64$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoi64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$89._wcstoi64_l$MH,"_wcstoi64_l");
    }
    public static long _wcstoi64_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = _wcstoi64_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoui64$MH() {
        return RuntimeHelper.requireNonNull(constants$89._wcstoui64$MH,"_wcstoui64");
    }
    public static long _wcstoui64 ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = _wcstoui64$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoui64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$89._wcstoui64_l$MH,"_wcstoui64_l");
    }
    public static long _wcstoui64_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = _wcstoui64_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfullpath$MH() {
        return RuntimeHelper.requireNonNull(constants$90._wfullpath$MH,"_wfullpath");
    }
    public static MemoryAddress _wfullpath ( Addressable _Buffer,  Addressable _Path,  long _BufferCount) {
        var mh$ = _wfullpath$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Buffer, _Path, _BufferCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wmakepath_s$MH() {
        return RuntimeHelper.requireNonNull(constants$90._wmakepath_s$MH,"_wmakepath_s");
    }
    public static int _wmakepath_s ( Addressable _Buffer,  long _BufferCount,  Addressable _Drive,  Addressable _Dir,  Addressable _Filename,  Addressable _Ext) {
        var mh$ = _wmakepath_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wmakepath$MH() {
        return RuntimeHelper.requireNonNull(constants$90._wmakepath$MH,"_wmakepath");
    }
    public static void _wmakepath ( Addressable _Buffer,  Addressable _Drive,  Addressable _Dir,  Addressable _Filename,  Addressable _Ext) {
        var mh$ = _wmakepath$MH();
        try {
            mh$.invokeExact(_Buffer, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsplitpath$MH() {
        return RuntimeHelper.requireNonNull(constants$90._wsplitpath$MH,"_wsplitpath");
    }
    public static void _wsplitpath ( Addressable _FullPath,  Addressable _Drive,  Addressable _Dir,  Addressable _Filename,  Addressable _Ext) {
        var mh$ = _wsplitpath$MH();
        try {
            mh$.invokeExact(_FullPath, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsplitpath_s$MH() {
        return RuntimeHelper.requireNonNull(constants$90._wsplitpath_s$MH,"_wsplitpath_s");
    }
    public static int _wsplitpath_s ( Addressable _FullPath,  Addressable _Drive,  long _DriveCount,  Addressable _Dir,  long _DirCount,  Addressable _Filename,  long _FilenameCount,  Addressable _Ext,  long _ExtCount) {
        var mh$ = _wsplitpath_s$MH();
        try {
            return (int)mh$.invokeExact(_FullPath, _Drive, _DriveCount, _Dir, _DirCount, _Filename, _FilenameCount, _Ext, _ExtCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wdupenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$90._wdupenv_s$MH,"_wdupenv_s");
    }
    public static int _wdupenv_s ( Addressable _Buffer,  Addressable _BufferCount,  Addressable _VarName) {
        var mh$ = _wdupenv_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wgetenv$MH() {
        return RuntimeHelper.requireNonNull(constants$91._wgetenv$MH,"_wgetenv");
    }
    public static MemoryAddress _wgetenv ( Addressable _VarName) {
        var mh$ = _wgetenv$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wgetenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$91._wgetenv_s$MH,"_wgetenv_s");
    }
    public static int _wgetenv_s ( Addressable _RequiredCount,  Addressable _Buffer,  long _BufferCount,  Addressable _VarName) {
        var mh$ = _wgetenv_s$MH();
        try {
            return (int)mh$.invokeExact(_RequiredCount, _Buffer, _BufferCount, _VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wputenv$MH() {
        return RuntimeHelper.requireNonNull(constants$91._wputenv$MH,"_wputenv");
    }
    public static int _wputenv ( Addressable _EnvString) {
        var mh$ = _wputenv$MH();
        try {
            return (int)mh$.invokeExact(_EnvString);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wputenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$91._wputenv_s$MH,"_wputenv_s");
    }
    public static int _wputenv_s ( Addressable _Name,  Addressable _Value) {
        var mh$ = _wputenv_s$MH();
        try {
            return (int)mh$.invokeExact(_Name, _Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsearchenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$91._wsearchenv_s$MH,"_wsearchenv_s");
    }
    public static int _wsearchenv_s ( Addressable _Filename,  Addressable _VarName,  Addressable _Buffer,  long _BufferCount) {
        var mh$ = _wsearchenv_s$MH();
        try {
            return (int)mh$.invokeExact(_Filename, _VarName, _Buffer, _BufferCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsearchenv$MH() {
        return RuntimeHelper.requireNonNull(constants$91._wsearchenv$MH,"_wsearchenv");
    }
    public static void _wsearchenv ( Addressable _Filename,  Addressable _VarName,  Addressable _ResultPath) {
        var mh$ = _wsearchenv$MH();
        try {
            mh$.invokeExact(_Filename, _VarName, _ResultPath);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsystem$MH() {
        return RuntimeHelper.requireNonNull(constants$92._wsystem$MH,"_wsystem");
    }
    public static int _wsystem ( Addressable _Command) {
        var mh$ = _wsystem$MH();
        try {
            return (int)mh$.invokeExact(_Command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swab$MH() {
        return RuntimeHelper.requireNonNull(constants$92._swab$MH,"_swab");
    }
    public static void _swab ( Addressable _Buf1,  Addressable _Buf2,  int _SizeInBytes) {
        var mh$ = _swab$MH();
        try {
            mh$.invokeExact(_Buf1, _Buf2, _SizeInBytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle exit$MH() {
        return RuntimeHelper.requireNonNull(constants$92.exit$MH,"exit");
    }
    public static void exit ( int _Code) {
        var mh$ = exit$MH();
        try {
            mh$.invokeExact(_Code);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _exit$MH() {
        return RuntimeHelper.requireNonNull(constants$92._exit$MH,"_exit");
    }
    public static void _exit ( int _Code) {
        var mh$ = _exit$MH();
        try {
            mh$.invokeExact(_Code);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _Exit$MH() {
        return RuntimeHelper.requireNonNull(constants$92._Exit$MH,"_Exit");
    }
    public static void _Exit ( int _Code) {
        var mh$ = _Exit$MH();
        try {
            mh$.invokeExact(_Code);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle quick_exit$MH() {
        return RuntimeHelper.requireNonNull(constants$92.quick_exit$MH,"quick_exit");
    }
    public static void quick_exit ( int _Code) {
        var mh$ = quick_exit$MH();
        try {
            mh$.invokeExact(_Code);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle abort$MH() {
        return RuntimeHelper.requireNonNull(constants$93.abort$MH,"abort");
    }
    public static void abort () {
        var mh$ = abort$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_abort_behavior$MH() {
        return RuntimeHelper.requireNonNull(constants$93._set_abort_behavior$MH,"_set_abort_behavior");
    }
    public static int _set_abort_behavior ( int _Flags,  int _Mask) {
        var mh$ = _set_abort_behavior$MH();
        try {
            return (int)mh$.invokeExact(_Flags, _Mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atexit$MH() {
        return RuntimeHelper.requireNonNull(constants$94.atexit$MH,"atexit");
    }
    public static int atexit ( Addressable x0) {
        var mh$ = atexit$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _onexit$MH() {
        return RuntimeHelper.requireNonNull(constants$94._onexit$MH,"_onexit");
    }
    public static MemoryAddress _onexit ( Addressable _Func) {
        var mh$ = _onexit$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle at_quick_exit$MH() {
        return RuntimeHelper.requireNonNull(constants$94.at_quick_exit$MH,"at_quick_exit");
    }
    public static int at_quick_exit ( Addressable x0) {
        var mh$ = at_quick_exit$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_purecall_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$95._set_purecall_handler$MH,"_set_purecall_handler");
    }
    public static MemoryAddress _set_purecall_handler ( Addressable _Handler) {
        var mh$ = _set_purecall_handler$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_purecall_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$95._get_purecall_handler$MH,"_get_purecall_handler");
    }
    public static MemoryAddress _get_purecall_handler () {
        var mh$ = _get_purecall_handler$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_invalid_parameter_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$95._set_invalid_parameter_handler$MH,"_set_invalid_parameter_handler");
    }
    public static MemoryAddress _set_invalid_parameter_handler ( Addressable _Handler) {
        var mh$ = _set_invalid_parameter_handler$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_invalid_parameter_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$96._get_invalid_parameter_handler$MH,"_get_invalid_parameter_handler");
    }
    public static MemoryAddress _get_invalid_parameter_handler () {
        var mh$ = _get_invalid_parameter_handler$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_thread_local_invalid_parameter_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$96._set_thread_local_invalid_parameter_handler$MH,"_set_thread_local_invalid_parameter_handler");
    }
    public static MemoryAddress _set_thread_local_invalid_parameter_handler ( Addressable _Handler) {
        var mh$ = _set_thread_local_invalid_parameter_handler$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_thread_local_invalid_parameter_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$96._get_thread_local_invalid_parameter_handler$MH,"_get_thread_local_invalid_parameter_handler");
    }
    public static MemoryAddress _get_thread_local_invalid_parameter_handler () {
        var mh$ = _get_thread_local_invalid_parameter_handler$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_error_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$96._set_error_mode$MH,"_set_error_mode");
    }
    public static int _set_error_mode ( int _Mode) {
        var mh$ = _set_error_mode$MH();
        try {
            return (int)mh$.invokeExact(_Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sys_errlist$MH() {
        return RuntimeHelper.requireNonNull(constants$96.__sys_errlist$MH,"__sys_errlist");
    }
    public static MemoryAddress __sys_errlist () {
        var mh$ = __sys_errlist$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sys_nerr$MH() {
        return RuntimeHelper.requireNonNull(constants$96.__sys_nerr$MH,"__sys_nerr");
    }
    public static MemoryAddress __sys_nerr () {
        var mh$ = __sys_nerr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__pgmptr$MH() {
        return RuntimeHelper.requireNonNull(constants$97.__p__pgmptr$MH,"__p__pgmptr");
    }
    public static MemoryAddress __p__pgmptr () {
        var mh$ = __p__pgmptr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__wpgmptr$MH() {
        return RuntimeHelper.requireNonNull(constants$97.__p__wpgmptr$MH,"__p__wpgmptr");
    }
    public static MemoryAddress __p__wpgmptr () {
        var mh$ = __p__wpgmptr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__fmode$MH() {
        return RuntimeHelper.requireNonNull(constants$97.__p__fmode$MH,"__p__fmode");
    }
    public static MemoryAddress __p__fmode () {
        var mh$ = __p__fmode$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_pgmptr$MH() {
        return RuntimeHelper.requireNonNull(constants$97._get_pgmptr$MH,"_get_pgmptr");
    }
    public static int _get_pgmptr ( Addressable _Value) {
        var mh$ = _get_pgmptr$MH();
        try {
            return (int)mh$.invokeExact(_Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_wpgmptr$MH() {
        return RuntimeHelper.requireNonNull(constants$97._get_wpgmptr$MH,"_get_wpgmptr");
    }
    public static int _get_wpgmptr ( Addressable _Value) {
        var mh$ = _get_wpgmptr$MH();
        try {
            return (int)mh$.invokeExact(_Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_fmode$MH() {
        return RuntimeHelper.requireNonNull(constants$97._set_fmode$MH,"_set_fmode");
    }
    public static int _set_fmode ( int _Mode) {
        var mh$ = _set_fmode$MH();
        try {
            return (int)mh$.invokeExact(_Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_fmode$MH() {
        return RuntimeHelper.requireNonNull(constants$98._get_fmode$MH,"_get_fmode");
    }
    public static int _get_fmode ( Addressable _PMode) {
        var mh$ = _get_fmode$MH();
        try {
            return (int)mh$.invokeExact(_PMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle abs$MH() {
        return RuntimeHelper.requireNonNull(constants$98.abs$MH,"abs");
    }
    public static int abs ( int _Number) {
        var mh$ = abs$MH();
        try {
            return (int)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle labs$MH() {
        return RuntimeHelper.requireNonNull(constants$98.labs$MH,"labs");
    }
    public static int labs ( int _Number) {
        var mh$ = labs$MH();
        try {
            return (int)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle llabs$MH() {
        return RuntimeHelper.requireNonNull(constants$98.llabs$MH,"llabs");
    }
    public static long llabs ( long _Number) {
        var mh$ = llabs$MH();
        try {
            return (long)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _abs64$MH() {
        return RuntimeHelper.requireNonNull(constants$98._abs64$MH,"_abs64");
    }
    public static long _abs64 ( long _Number) {
        var mh$ = _abs64$MH();
        try {
            return (long)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _byteswap_ushort$MH() {
        return RuntimeHelper.requireNonNull(constants$98._byteswap_ushort$MH,"_byteswap_ushort");
    }
    public static short _byteswap_ushort ( short _Number) {
        var mh$ = _byteswap_ushort$MH();
        try {
            return (short)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _byteswap_ulong$MH() {
        return RuntimeHelper.requireNonNull(constants$99._byteswap_ulong$MH,"_byteswap_ulong");
    }
    public static int _byteswap_ulong ( int _Number) {
        var mh$ = _byteswap_ulong$MH();
        try {
            return (int)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _byteswap_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$99._byteswap_uint64$MH,"_byteswap_uint64");
    }
    public static long _byteswap_uint64 ( long _Number) {
        var mh$ = _byteswap_uint64$MH();
        try {
            return (long)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle div$MH() {
        return RuntimeHelper.requireNonNull(constants$99.div$MH,"div");
    }
    public static MemorySegment div ( SegmentAllocator allocator,  int _Numerator,  int _Denominator) {
        var mh$ = div$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, _Numerator, _Denominator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ldiv$MH() {
        return RuntimeHelper.requireNonNull(constants$99.ldiv$MH,"ldiv");
    }
    public static MemorySegment ldiv ( SegmentAllocator allocator,  int _Numerator,  int _Denominator) {
        var mh$ = ldiv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, _Numerator, _Denominator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lldiv$MH() {
        return RuntimeHelper.requireNonNull(constants$99.lldiv$MH,"lldiv");
    }
    public static MemorySegment lldiv ( SegmentAllocator allocator,  long _Numerator,  long _Denominator) {
        var mh$ = lldiv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, _Numerator, _Denominator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _rotl$MH() {
        return RuntimeHelper.requireNonNull(constants$99._rotl$MH,"_rotl");
    }
    public static int _rotl ( int _Value,  int _Shift) {
        var mh$ = _rotl$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Shift);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lrotl$MH() {
        return RuntimeHelper.requireNonNull(constants$100._lrotl$MH,"_lrotl");
    }
    public static int _lrotl ( int _Value,  int _Shift) {
        var mh$ = _lrotl$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Shift);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _rotl64$MH() {
        return RuntimeHelper.requireNonNull(constants$100._rotl64$MH,"_rotl64");
    }
    public static long _rotl64 ( long _Value,  int _Shift) {
        var mh$ = _rotl64$MH();
        try {
            return (long)mh$.invokeExact(_Value, _Shift);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _rotr$MH() {
        return RuntimeHelper.requireNonNull(constants$100._rotr$MH,"_rotr");
    }
    public static int _rotr ( int _Value,  int _Shift) {
        var mh$ = _rotr$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Shift);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lrotr$MH() {
        return RuntimeHelper.requireNonNull(constants$100._lrotr$MH,"_lrotr");
    }
    public static int _lrotr ( int _Value,  int _Shift) {
        var mh$ = _lrotr$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Shift);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _rotr64$MH() {
        return RuntimeHelper.requireNonNull(constants$100._rotr64$MH,"_rotr64");
    }
    public static long _rotr64 ( long _Value,  int _Shift) {
        var mh$ = _rotr64$MH();
        try {
            return (long)mh$.invokeExact(_Value, _Shift);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle srand$MH() {
        return RuntimeHelper.requireNonNull(constants$100.srand$MH,"srand");
    }
    public static void srand ( int _Seed) {
        var mh$ = srand$MH();
        try {
            mh$.invokeExact(_Seed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rand$MH() {
        return RuntimeHelper.requireNonNull(constants$101.rand$MH,"rand");
    }
    public static int rand () {
        var mh$ = rand$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atof$MH() {
        return RuntimeHelper.requireNonNull(constants$101.atof$MH,"atof");
    }
    public static double atof ( Addressable _String) {
        var mh$ = atof$MH();
        try {
            return (double)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atoi$MH() {
        return RuntimeHelper.requireNonNull(constants$101.atoi$MH,"atoi");
    }
    public static int atoi ( Addressable _String) {
        var mh$ = atoi$MH();
        try {
            return (int)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atol$MH() {
        return RuntimeHelper.requireNonNull(constants$101.atol$MH,"atol");
    }
    public static int atol ( Addressable _String) {
        var mh$ = atol$MH();
        try {
            return (int)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atoll$MH() {
        return RuntimeHelper.requireNonNull(constants$101.atoll$MH,"atoll");
    }
    public static long atoll ( Addressable _String) {
        var mh$ = atoll$MH();
        try {
            return (long)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoi64$MH() {
        return RuntimeHelper.requireNonNull(constants$101._atoi64$MH,"_atoi64");
    }
    public static long _atoi64 ( Addressable _String) {
        var mh$ = _atoi64$MH();
        try {
            return (long)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atof_l$MH() {
        return RuntimeHelper.requireNonNull(constants$102._atof_l$MH,"_atof_l");
    }
    public static double _atof_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = _atof_l$MH();
        try {
            return (double)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoi_l$MH() {
        return RuntimeHelper.requireNonNull(constants$102._atoi_l$MH,"_atoi_l");
    }
    public static int _atoi_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = _atoi_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atol_l$MH() {
        return RuntimeHelper.requireNonNull(constants$102._atol_l$MH,"_atol_l");
    }
    public static int _atol_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = _atol_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$102._atoll_l$MH,"_atoll_l");
    }
    public static long _atoll_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = _atoll_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoi64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$102._atoi64_l$MH,"_atoi64_l");
    }
    public static long _atoi64_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = _atoi64_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoflt$MH() {
        return RuntimeHelper.requireNonNull(constants$102._atoflt$MH,"_atoflt");
    }
    public static int _atoflt ( Addressable _Result,  Addressable _String) {
        var mh$ = _atoflt$MH();
        try {
            return (int)mh$.invokeExact(_Result, _String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atodbl$MH() {
        return RuntimeHelper.requireNonNull(constants$103._atodbl$MH,"_atodbl");
    }
    public static int _atodbl ( Addressable _Result,  Addressable _String) {
        var mh$ = _atodbl$MH();
        try {
            return (int)mh$.invokeExact(_Result, _String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoldbl$MH() {
        return RuntimeHelper.requireNonNull(constants$103._atoldbl$MH,"_atoldbl");
    }
    public static int _atoldbl ( Addressable _Result,  Addressable _String) {
        var mh$ = _atoldbl$MH();
        try {
            return (int)mh$.invokeExact(_Result, _String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoflt_l$MH() {
        return RuntimeHelper.requireNonNull(constants$103._atoflt_l$MH,"_atoflt_l");
    }
    public static int _atoflt_l ( Addressable _Result,  Addressable _String,  Addressable _Locale) {
        var mh$ = _atoflt_l$MH();
        try {
            return (int)mh$.invokeExact(_Result, _String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atodbl_l$MH() {
        return RuntimeHelper.requireNonNull(constants$103._atodbl_l$MH,"_atodbl_l");
    }
    public static int _atodbl_l ( Addressable _Result,  Addressable _String,  Addressable _Locale) {
        var mh$ = _atodbl_l$MH();
        try {
            return (int)mh$.invokeExact(_Result, _String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoldbl_l$MH() {
        return RuntimeHelper.requireNonNull(constants$103._atoldbl_l$MH,"_atoldbl_l");
    }
    public static int _atoldbl_l ( Addressable _Result,  Addressable _String,  Addressable _Locale) {
        var mh$ = _atoldbl_l$MH();
        try {
            return (int)mh$.invokeExact(_Result, _String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtof$MH() {
        return RuntimeHelper.requireNonNull(constants$103.strtof$MH,"strtof");
    }
    public static float strtof ( Addressable _String,  Addressable _EndPtr) {
        var mh$ = strtof$MH();
        try {
            return (float)mh$.invokeExact(_String, _EndPtr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtof_l$MH() {
        return RuntimeHelper.requireNonNull(constants$104._strtof_l$MH,"_strtof_l");
    }
    public static float _strtof_l ( Addressable _String,  Addressable _EndPtr,  Addressable _Locale) {
        var mh$ = _strtof_l$MH();
        try {
            return (float)mh$.invokeExact(_String, _EndPtr, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtod$MH() {
        return RuntimeHelper.requireNonNull(constants$104.strtod$MH,"strtod");
    }
    public static double strtod ( Addressable _String,  Addressable _EndPtr) {
        var mh$ = strtod$MH();
        try {
            return (double)mh$.invokeExact(_String, _EndPtr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtod_l$MH() {
        return RuntimeHelper.requireNonNull(constants$104._strtod_l$MH,"_strtod_l");
    }
    public static double _strtod_l ( Addressable _String,  Addressable _EndPtr,  Addressable _Locale) {
        var mh$ = _strtod_l$MH();
        try {
            return (double)mh$.invokeExact(_String, _EndPtr, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtol$MH() {
        return RuntimeHelper.requireNonNull(constants$104.strtol$MH,"strtol");
    }
    public static int strtol ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = strtol$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtol_l$MH() {
        return RuntimeHelper.requireNonNull(constants$104._strtol_l$MH,"_strtol_l");
    }
    public static int _strtol_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = _strtol_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtoll$MH() {
        return RuntimeHelper.requireNonNull(constants$104.strtoll$MH,"strtoll");
    }
    public static long strtoll ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = strtoll$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$105._strtoll_l$MH,"_strtoll_l");
    }
    public static long _strtoll_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = _strtoll_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtoul$MH() {
        return RuntimeHelper.requireNonNull(constants$105.strtoul$MH,"strtoul");
    }
    public static int strtoul ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = strtoul$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


