// Generated by jextract

package gov.nasa.gsfc.heasarc.cfitsio;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface ffiter$workFn {

    int apply(int _x0, int _x1, int _x2, int _x3, int _x4, java.lang.foreign.MemoryAddress _x5, java.lang.foreign.MemoryAddress _x6);
    static MemorySegment allocate(ffiter$workFn fi, MemorySession session) {
        return RuntimeHelper.upcallStub(ffiter$workFn.class, fi, constants$205.ffiter$workFn$FUNC, session);
    }
    static ffiter$workFn ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (int __x0, int __x1, int __x2, int __x3, int __x4, java.lang.foreign.MemoryAddress __x5, java.lang.foreign.MemoryAddress __x6) -> {
            try {
                return (int)constants$205.ffiter$workFn$MH.invokeExact((Addressable)symbol, __x0, __x1, __x2, __x3, __x4, (java.lang.foreign.Addressable)__x5, (java.lang.foreign.Addressable)__x6);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


