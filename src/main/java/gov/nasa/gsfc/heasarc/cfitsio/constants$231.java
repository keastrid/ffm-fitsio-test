// Generated by jextract

package gov.nasa.gsfc.heasarc.cfitsio;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$231 {

    static final FunctionDescriptor fp_test$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("comptype"),
            Constants$root.C_FLOAT$LAYOUT.withName("quantize_level"),
            Constants$root.C_LONG$LAYOUT.withName("no_dither"),
            Constants$root.C_LONG$LAYOUT.withName("dither_offset"),
            Constants$root.C_LONG$LAYOUT.withName("dither_method"),
            Constants$root.C_FLOAT$LAYOUT.withName("scale"),
            Constants$root.C_FLOAT$LAYOUT.withName("rescale_noise"),
            Constants$root.C_LONG$LAYOUT.withName("smooth"),
            Constants$root.C_LONG$LAYOUT.withName("int_to_float"),
            Constants$root.C_FLOAT$LAYOUT.withName("n3ratio"),
            Constants$root.C_FLOAT$LAYOUT.withName("n3min"),
            MemoryLayout.sequenceLayout(6, Constants$root.C_LONG$LAYOUT).withName("ntile"),
            Constants$root.C_LONG$LAYOUT.withName("to_stdout"),
            Constants$root.C_LONG$LAYOUT.withName("listonly"),
            Constants$root.C_LONG$LAYOUT.withName("clobber"),
            Constants$root.C_LONG$LAYOUT.withName("delete_input"),
            Constants$root.C_LONG$LAYOUT.withName("do_not_prompt"),
            Constants$root.C_LONG$LAYOUT.withName("do_checksums"),
            Constants$root.C_LONG$LAYOUT.withName("do_gzip_file"),
            Constants$root.C_LONG$LAYOUT.withName("do_images"),
            Constants$root.C_LONG$LAYOUT.withName("do_tables"),
            Constants$root.C_LONG$LAYOUT.withName("test_all"),
            Constants$root.C_LONG$LAYOUT.withName("verbose"),
            MemoryLayout.sequenceLayout(513, Constants$root.C_CHAR$LAYOUT).withName("prefix"),
            MemoryLayout.sequenceLayout(513, Constants$root.C_CHAR$LAYOUT).withName("extname"),
            MemoryLayout.paddingLayout(16),
            Constants$root.C_LONG$LAYOUT.withName("delete_suffix"),
            MemoryLayout.sequenceLayout(513, Constants$root.C_CHAR$LAYOUT).withName("outfile"),
            MemoryLayout.paddingLayout(24),
            Constants$root.C_LONG$LAYOUT.withName("firstfile"),
            Constants$root.C_LONG$LAYOUT.withName("initialized"),
            Constants$root.C_LONG$LAYOUT.withName("preflight_checked")
        )
    );
    static final MethodHandle fp_test$MH = RuntimeHelper.downcallHandle(
        "fp_test",
        constants$231.fp_test$FUNC
    );
    static final FunctionDescriptor fp_pack_hdu$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("comptype"),
            Constants$root.C_FLOAT$LAYOUT.withName("quantize_level"),
            Constants$root.C_LONG$LAYOUT.withName("no_dither"),
            Constants$root.C_LONG$LAYOUT.withName("dither_offset"),
            Constants$root.C_LONG$LAYOUT.withName("dither_method"),
            Constants$root.C_FLOAT$LAYOUT.withName("scale"),
            Constants$root.C_FLOAT$LAYOUT.withName("rescale_noise"),
            Constants$root.C_LONG$LAYOUT.withName("smooth"),
            Constants$root.C_LONG$LAYOUT.withName("int_to_float"),
            Constants$root.C_FLOAT$LAYOUT.withName("n3ratio"),
            Constants$root.C_FLOAT$LAYOUT.withName("n3min"),
            MemoryLayout.sequenceLayout(6, Constants$root.C_LONG$LAYOUT).withName("ntile"),
            Constants$root.C_LONG$LAYOUT.withName("to_stdout"),
            Constants$root.C_LONG$LAYOUT.withName("listonly"),
            Constants$root.C_LONG$LAYOUT.withName("clobber"),
            Constants$root.C_LONG$LAYOUT.withName("delete_input"),
            Constants$root.C_LONG$LAYOUT.withName("do_not_prompt"),
            Constants$root.C_LONG$LAYOUT.withName("do_checksums"),
            Constants$root.C_LONG$LAYOUT.withName("do_gzip_file"),
            Constants$root.C_LONG$LAYOUT.withName("do_images"),
            Constants$root.C_LONG$LAYOUT.withName("do_tables"),
            Constants$root.C_LONG$LAYOUT.withName("test_all"),
            Constants$root.C_LONG$LAYOUT.withName("verbose"),
            MemoryLayout.sequenceLayout(513, Constants$root.C_CHAR$LAYOUT).withName("prefix"),
            MemoryLayout.sequenceLayout(513, Constants$root.C_CHAR$LAYOUT).withName("extname"),
            MemoryLayout.paddingLayout(16),
            Constants$root.C_LONG$LAYOUT.withName("delete_suffix"),
            MemoryLayout.sequenceLayout(513, Constants$root.C_CHAR$LAYOUT).withName("outfile"),
            MemoryLayout.paddingLayout(24),
            Constants$root.C_LONG$LAYOUT.withName("firstfile"),
            Constants$root.C_LONG$LAYOUT.withName("initialized"),
            Constants$root.C_LONG$LAYOUT.withName("preflight_checked")
        ),
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle fp_pack_hdu$MH = RuntimeHelper.downcallHandle(
        "fp_pack_hdu",
        constants$231.fp_pack_hdu$FUNC
    );
    static final FunctionDescriptor fp_unpack_hdu$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("comptype"),
            Constants$root.C_FLOAT$LAYOUT.withName("quantize_level"),
            Constants$root.C_LONG$LAYOUT.withName("no_dither"),
            Constants$root.C_LONG$LAYOUT.withName("dither_offset"),
            Constants$root.C_LONG$LAYOUT.withName("dither_method"),
            Constants$root.C_FLOAT$LAYOUT.withName("scale"),
            Constants$root.C_FLOAT$LAYOUT.withName("rescale_noise"),
            Constants$root.C_LONG$LAYOUT.withName("smooth"),
            Constants$root.C_LONG$LAYOUT.withName("int_to_float"),
            Constants$root.C_FLOAT$LAYOUT.withName("n3ratio"),
            Constants$root.C_FLOAT$LAYOUT.withName("n3min"),
            MemoryLayout.sequenceLayout(6, Constants$root.C_LONG$LAYOUT).withName("ntile"),
            Constants$root.C_LONG$LAYOUT.withName("to_stdout"),
            Constants$root.C_LONG$LAYOUT.withName("listonly"),
            Constants$root.C_LONG$LAYOUT.withName("clobber"),
            Constants$root.C_LONG$LAYOUT.withName("delete_input"),
            Constants$root.C_LONG$LAYOUT.withName("do_not_prompt"),
            Constants$root.C_LONG$LAYOUT.withName("do_checksums"),
            Constants$root.C_LONG$LAYOUT.withName("do_gzip_file"),
            Constants$root.C_LONG$LAYOUT.withName("do_images"),
            Constants$root.C_LONG$LAYOUT.withName("do_tables"),
            Constants$root.C_LONG$LAYOUT.withName("test_all"),
            Constants$root.C_LONG$LAYOUT.withName("verbose"),
            MemoryLayout.sequenceLayout(513, Constants$root.C_CHAR$LAYOUT).withName("prefix"),
            MemoryLayout.sequenceLayout(513, Constants$root.C_CHAR$LAYOUT).withName("extname"),
            MemoryLayout.paddingLayout(16),
            Constants$root.C_LONG$LAYOUT.withName("delete_suffix"),
            MemoryLayout.sequenceLayout(513, Constants$root.C_CHAR$LAYOUT).withName("outfile"),
            MemoryLayout.paddingLayout(24),
            Constants$root.C_LONG$LAYOUT.withName("firstfile"),
            Constants$root.C_LONG$LAYOUT.withName("initialized"),
            Constants$root.C_LONG$LAYOUT.withName("preflight_checked")
        ),
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle fp_unpack_hdu$MH = RuntimeHelper.downcallHandle(
        "fp_unpack_hdu",
        constants$231.fp_unpack_hdu$FUNC
    );
    static final FunctionDescriptor fits_read_image_speed$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle fits_read_image_speed$MH = RuntimeHelper.downcallHandle(
        "fits_read_image_speed",
        constants$231.fits_read_image_speed$FUNC
    );
    static final FunctionDescriptor fp_test_hdu$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("comptype"),
            Constants$root.C_FLOAT$LAYOUT.withName("quantize_level"),
            Constants$root.C_LONG$LAYOUT.withName("no_dither"),
            Constants$root.C_LONG$LAYOUT.withName("dither_offset"),
            Constants$root.C_LONG$LAYOUT.withName("dither_method"),
            Constants$root.C_FLOAT$LAYOUT.withName("scale"),
            Constants$root.C_FLOAT$LAYOUT.withName("rescale_noise"),
            Constants$root.C_LONG$LAYOUT.withName("smooth"),
            Constants$root.C_LONG$LAYOUT.withName("int_to_float"),
            Constants$root.C_FLOAT$LAYOUT.withName("n3ratio"),
            Constants$root.C_FLOAT$LAYOUT.withName("n3min"),
            MemoryLayout.sequenceLayout(6, Constants$root.C_LONG$LAYOUT).withName("ntile"),
            Constants$root.C_LONG$LAYOUT.withName("to_stdout"),
            Constants$root.C_LONG$LAYOUT.withName("listonly"),
            Constants$root.C_LONG$LAYOUT.withName("clobber"),
            Constants$root.C_LONG$LAYOUT.withName("delete_input"),
            Constants$root.C_LONG$LAYOUT.withName("do_not_prompt"),
            Constants$root.C_LONG$LAYOUT.withName("do_checksums"),
            Constants$root.C_LONG$LAYOUT.withName("do_gzip_file"),
            Constants$root.C_LONG$LAYOUT.withName("do_images"),
            Constants$root.C_LONG$LAYOUT.withName("do_tables"),
            Constants$root.C_LONG$LAYOUT.withName("test_all"),
            Constants$root.C_LONG$LAYOUT.withName("verbose"),
            MemoryLayout.sequenceLayout(513, Constants$root.C_CHAR$LAYOUT).withName("prefix"),
            MemoryLayout.sequenceLayout(513, Constants$root.C_CHAR$LAYOUT).withName("extname"),
            MemoryLayout.paddingLayout(16),
            Constants$root.C_LONG$LAYOUT.withName("delete_suffix"),
            MemoryLayout.sequenceLayout(513, Constants$root.C_CHAR$LAYOUT).withName("outfile"),
            MemoryLayout.paddingLayout(24),
            Constants$root.C_LONG$LAYOUT.withName("firstfile"),
            Constants$root.C_LONG$LAYOUT.withName("initialized"),
            Constants$root.C_LONG$LAYOUT.withName("preflight_checked")
        ),
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle fp_test_hdu$MH = RuntimeHelper.downcallHandle(
        "fp_test_hdu",
        constants$231.fp_test_hdu$FUNC
    );
    static final FunctionDescriptor fp_test_table$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("comptype"),
            Constants$root.C_FLOAT$LAYOUT.withName("quantize_level"),
            Constants$root.C_LONG$LAYOUT.withName("no_dither"),
            Constants$root.C_LONG$LAYOUT.withName("dither_offset"),
            Constants$root.C_LONG$LAYOUT.withName("dither_method"),
            Constants$root.C_FLOAT$LAYOUT.withName("scale"),
            Constants$root.C_FLOAT$LAYOUT.withName("rescale_noise"),
            Constants$root.C_LONG$LAYOUT.withName("smooth"),
            Constants$root.C_LONG$LAYOUT.withName("int_to_float"),
            Constants$root.C_FLOAT$LAYOUT.withName("n3ratio"),
            Constants$root.C_FLOAT$LAYOUT.withName("n3min"),
            MemoryLayout.sequenceLayout(6, Constants$root.C_LONG$LAYOUT).withName("ntile"),
            Constants$root.C_LONG$LAYOUT.withName("to_stdout"),
            Constants$root.C_LONG$LAYOUT.withName("listonly"),
            Constants$root.C_LONG$LAYOUT.withName("clobber"),
            Constants$root.C_LONG$LAYOUT.withName("delete_input"),
            Constants$root.C_LONG$LAYOUT.withName("do_not_prompt"),
            Constants$root.C_LONG$LAYOUT.withName("do_checksums"),
            Constants$root.C_LONG$LAYOUT.withName("do_gzip_file"),
            Constants$root.C_LONG$LAYOUT.withName("do_images"),
            Constants$root.C_LONG$LAYOUT.withName("do_tables"),
            Constants$root.C_LONG$LAYOUT.withName("test_all"),
            Constants$root.C_LONG$LAYOUT.withName("verbose"),
            MemoryLayout.sequenceLayout(513, Constants$root.C_CHAR$LAYOUT).withName("prefix"),
            MemoryLayout.sequenceLayout(513, Constants$root.C_CHAR$LAYOUT).withName("extname"),
            MemoryLayout.paddingLayout(16),
            Constants$root.C_LONG$LAYOUT.withName("delete_suffix"),
            MemoryLayout.sequenceLayout(513, Constants$root.C_CHAR$LAYOUT).withName("outfile"),
            MemoryLayout.paddingLayout(24),
            Constants$root.C_LONG$LAYOUT.withName("firstfile"),
            Constants$root.C_LONG$LAYOUT.withName("initialized"),
            Constants$root.C_LONG$LAYOUT.withName("preflight_checked")
        ),
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle fp_test_table$MH = RuntimeHelper.downcallHandle(
        "fp_test_table",
        constants$231.fp_test_table$FUNC
    );
}


